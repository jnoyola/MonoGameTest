<?xml version="1.0"?>
<doc>
    <assembly>
        <name>2MGFX</name>
    </assembly>
    <members>
        <member name="F:TwoMGFX.EffectObject.state_table">
            <summary>
            The shared state definition table.
            </summary>
        </member>
        <member name="M:TwoMGFX.EffectObject.Write(System.IO.BinaryWriter,TwoMGFX.Options)">
            <summary>
            Writes the effect for loading later.
            </summary>
        </member>
        <member name="F:TwoMGFX.ShaderData._cbuffers">
            <summary>
            The index to the constant buffers which are 
            required by this shader at runtime.
            </summary>
        </member>
        <member name="P:TwoMGFX.ShaderProfile.All">
            <summary>
            Returns all the loaded shader profiles.
            </summary>
        </member>
        <member name="P:TwoMGFX.ShaderProfile.Name">
            <summary>
            Returns the name of the shader profile.
            </summary>
        </member>
        <member name="P:TwoMGFX.ShaderProfile.FormatId">
            <summary>
            Returns the format identifier used in the MGFX file format.
            </summary>
        </member>
        <member name="M:TwoMGFX.ShaderProfile.ForPlatform(System.String)">
            <summary>
            Returns the correct profile for the named platform or
            null if no supporting profile is found.
            </summary>
        </member>
        <member name="M:TwoMGFX.ShaderProfile.FromName(System.String)">
            <summary>
            Returns the profile by name or null if no match is found.
            </summary>
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants._INCL_MOJOSHADER_H_">
             _INCL_MOJOSHADER_H_ -> 
             Error generating expression: Value cannot be null.
            Parameter name: node
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants._INCL_MOJOSHADER_VERSION_H_">
             _INCL_MOJOSHADER_VERSION_H_ -> 
             Error generating expression: Value cannot be null.
            Parameter name: node
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_VERSION">
            MOJOSHADER_VERSION -> 1111
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_CHANGESET">
            MOJOSHADER_CHANGESET -> "hg-1111:91a6af79b5e4"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_POSITION_NONE">
            MOJOSHADER_POSITION_NONE -> (-3)
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_POSITION_BEFORE">
            MOJOSHADER_POSITION_BEFORE -> (-2)
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_POSITION_AFTER">
            MOJOSHADER_POSITION_AFTER -> (-1)
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_PROFILE_D3D">
            MOJOSHADER_PROFILE_D3D -> "d3d"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_PROFILE_BYTECODE">
            MOJOSHADER_PROFILE_BYTECODE -> "bytecode"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_PROFILE_GLSL">
            MOJOSHADER_PROFILE_GLSL -> "glsl"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_PROFILE_GLSL120">
            MOJOSHADER_PROFILE_GLSL120 -> "glsl120"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_PROFILE_ARB1">
            MOJOSHADER_PROFILE_ARB1 -> "arb1"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_PROFILE_NV2">
            MOJOSHADER_PROFILE_NV2 -> "nv2"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_PROFILE_NV3">
            MOJOSHADER_PROFILE_NV3 -> "nv3"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_PROFILE_NV4">
            MOJOSHADER_PROFILE_NV4 -> "nv4"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_SRC_PROFILE_HLSL_VS_1_1">
            MOJOSHADER_SRC_PROFILE_HLSL_VS_1_1 -> "hlsl_vs_1_1"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_SRC_PROFILE_HLSL_VS_2_0">
            MOJOSHADER_SRC_PROFILE_HLSL_VS_2_0 -> "hlsl_vs_2_0"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_SRC_PROFILE_HLSL_VS_3_0">
            MOJOSHADER_SRC_PROFILE_HLSL_VS_3_0 -> "hlsl_vs_3_0"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_SRC_PROFILE_HLSL_PS_1_1">
            MOJOSHADER_SRC_PROFILE_HLSL_PS_1_1 -> "hlsl_ps_1_1"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_SRC_PROFILE_HLSL_PS_1_2">
            MOJOSHADER_SRC_PROFILE_HLSL_PS_1_2 -> "hlsl_ps_1_2"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_SRC_PROFILE_HLSL_PS_1_3">
            MOJOSHADER_SRC_PROFILE_HLSL_PS_1_3 -> "hlsl_ps_1_3"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_SRC_PROFILE_HLSL_PS_1_4">
            MOJOSHADER_SRC_PROFILE_HLSL_PS_1_4 -> "hlsl_ps_1_4"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_SRC_PROFILE_HLSL_PS_2_0">
            MOJOSHADER_SRC_PROFILE_HLSL_PS_2_0 -> "hlsl_ps_2_0"
        </member>
        <member name="F:TwoMGFX.MojoShader.NativeConstants.MOJOSHADER_SRC_PROFILE_HLSL_PS_3_0">
            MOJOSHADER_SRC_PROFILE_HLSL_PS_3_0 -> "hlsl_ps_3_0"
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_uniform.type">
            MOJOSHADER_uniformType->Anonymous_cf91fd71_65e4_4c31_a6d5_9488d7f3d32a
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_uniform.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_uniform.array_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_uniform.constant">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_uniform.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_constant.type">
            MOJOSHADER_uniformType->Anonymous_cf91fd71_65e4_4c31_a6d5_9488d7f3d32a
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_constant.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_constant.value">
            Anonymous_5371dd6a_e42a_47c1_91d1_a2af9a8283be
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_sampler.type">
            MOJOSHADER_samplerType->Anonymous_a752a39b_b479_42b0_9502_e39ba7d86100
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_sampler.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_sampler.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_sampler.texbem">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_samplerMap.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_samplerMap.type">
            MOJOSHADER_samplerType->Anonymous_a752a39b_b479_42b0_9502_e39ba7d86100
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_attribute.usage">
            MOJOSHADER_usage->Anonymous_9c01433d_7bb5_4c50_bf77_e65cef0661b5
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_attribute.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_attribute.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_swizzle.usage">
            MOJOSHADER_usage->Anonymous_9c01433d_7bb5_4c50_bf77_e65cef0661b5
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_swizzle.index">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_swizzle.swizzles">
            unsigned char[4]
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbolTypeInfo.parameter_class">
            MOJOSHADER_symbolClass->Anonymous_681c4b26_94f7_4142_a8e9_b970fe0b60df
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbolTypeInfo.parameter_type">
            MOJOSHADER_symbolType->Anonymous_d8534f21_7f44_465d_8843_40a435dbb54a
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbolTypeInfo.rows">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbolTypeInfo.columns">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbolTypeInfo.elements">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbolTypeInfo.member_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbolTypeInfo.members">
            MOJOSHADER_symbolStructMember*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbolStructMember.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbolStructMember.info">
            MOJOSHADER_symbolTypeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbol.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbol.register_set">
            MOJOSHADER_symbolRegisterSet->Anonymous_9ff7ac54_131c_43b0_a295_9830d24ac76b
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbol.register_index">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbol.register_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_symbol.info">
            MOJOSHADER_symbolTypeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_error.error">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_error.filename">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_error.error_position">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOpcode.MOJOSHADER_PRESHADEROP_MIN_SCALAR">
            MOJOSHADER_PRESHADEROP_MIN_SCALAR -> MOJOSHADER_PRESHADEROP_SCALAR_OPS
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOperandType.MOJOSHADER_PRESHADEROPERAND_LITERAL">
            MOJOSHADER_PRESHADEROPERAND_LITERAL -> 1
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOperandType.MOJOSHADER_PRESHADEROPERAND_INPUT">
            MOJOSHADER_PRESHADEROPERAND_INPUT -> 2
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOperandType.MOJOSHADER_PRESHADEROPERAND_OUTPUT">
            MOJOSHADER_PRESHADEROPERAND_OUTPUT -> 4
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOperandType.MOJOSHADER_PRESHADEROPERAND_TEMP">
            MOJOSHADER_PRESHADEROPERAND_TEMP -> 7
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOperandType.MOJOSHADER_PRESHADEROPERAND_UNKN">
            MOJOSHADER_PRESHADEROPERAND_UNKN -> 0xff
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOperand.type">
            MOJOSHADER_preshaderOperandType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOperand.index">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOperand.indexingType">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderOperand.indexingIndex">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderInstruction.opcode">
            MOJOSHADER_preshaderOpcode
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderInstruction.element_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderInstruction.operand_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshaderInstruction.operands">
            MOJOSHADER_preshaderOperand[4]
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshader.literal_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshader.literals">
            double*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshader.temp_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshader.symbol_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshader.symbols">
            MOJOSHADER_symbol*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshader.instruction_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preshader.instructions">
            MOJOSHADER_preshaderInstruction*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.error_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.errors">
            MOJOSHADER_error*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.profile">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.output">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.output_len">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.instruction_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.shader_type">
            MOJOSHADER_shaderType->Anonymous_96517ad6_cc69_4542_8537_054e63919d54
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.major_ver">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.minor_ver">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.uniform_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.uniforms">
            MOJOSHADER_uniform*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.constant_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.constants">
            MOJOSHADER_constant*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.sampler_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.samplers">
            MOJOSHADER_sampler*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.attribute_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.attributes">
            MOJOSHADER_attribute*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.output_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.outputs">
            MOJOSHADER_attribute*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.swizzle_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.swizzles">
            MOJOSHADER_swizzle*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.symbol_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.symbols">
            MOJOSHADER_symbol*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.preshader">
            MOJOSHADER_preshader*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.malloc">
            MOJOSHADER_malloc
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.free">
            MOJOSHADER_free
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_parseData.malloc_data">
            void*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectParam.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectParam.semantic">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectState.type">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectPass.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectPass.state_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectPass.states">
            MOJOSHADER_effectState*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectTechnique.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectTechnique.pass_count">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectTechnique.passes">
            MOJOSHADER_effectPass*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectTexture.param">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectTexture.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectShader.technique">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectShader.pass">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effectShader.shader">
            MOJOSHADER_parseData*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.error_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.errors">
            MOJOSHADER_error*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.profile">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.param_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.params">
            MOJOSHADER_effectParam*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.technique_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.techniques">
            MOJOSHADER_effectTechnique*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.texture_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.textures">
            MOJOSHADER_effectTexture*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.shader_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.shaders">
            MOJOSHADER_effectShader*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.malloc">
            MOJOSHADER_malloc
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.free">
            MOJOSHADER_free
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_effect.malloc_data">
            void*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preprocessorDefine.identifier">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preprocessorDefine.definition">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preprocessData.error_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preprocessData.errors">
            MOJOSHADER_error*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preprocessData.output">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preprocessData.output_len">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preprocessData.malloc">
            MOJOSHADER_malloc
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preprocessData.free">
            MOJOSHADER_free
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_preprocessData.malloc_data">
            void*
        </member>
        <member name="T:TwoMGFX.MojoShader.MOJOSHADER_includeOpen">
             Return Type: int
            inctype: MOJOSHADER_includeType->Anonymous_f1eed39d_7d1b_46d4_972e_a3229d15c26e
            fname: char*
            parent: char*
            outdata: char**
            outbytes: unsigned int*
            m: MOJOSHADER_malloc
            f: MOJOSHADER_free
            d: void*
        </member>
        <member name="T:TwoMGFX.MojoShader.MOJOSHADER_includeClose">
             Return Type: void
            data: char*
            m: MOJOSHADER_malloc
            f: MOJOSHADER_free
            d: void*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeStructMember.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeStructMember.identifier">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeStruct.type">
            MOJOSHADER_astDataTypeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeStruct.members">
            MOJOSHADER_astDataTypeStructMember*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeStruct.member_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeArray.type">
            MOJOSHADER_astDataTypeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeArray.base">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeArray.elements">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeMatrix.type">
            MOJOSHADER_astDataTypeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeMatrix.base">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeMatrix.rows">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeMatrix.columns">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeBuffer.type">
            MOJOSHADER_astDataTypeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeBuffer.base">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeFunction.type">
            MOJOSHADER_astDataTypeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeFunction.retval">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeFunction.params">
            MOJOSHADER_astDataType**
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeFunction.num_params">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeFunction.intrinsic">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeUser.type">
            MOJOSHADER_astDataTypeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeUser.details">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataTypeUser.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataType.type">
            MOJOSHADER_astDataTypeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataType.array">
            MOJOSHADER_astDataTypeArray
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataType.structure">
            MOJOSHADER_astDataTypeStruct
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataType.vector">
            MOJOSHADER_astDataTypeVector->MOJOSHADER_astDataTypeArray
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataType.matrix">
            MOJOSHADER_astDataTypeMatrix
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataType.buffer">
            MOJOSHADER_astDataTypeBuffer
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataType.user">
            MOJOSHADER_astDataTypeUser
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astDataType.function">
            MOJOSHADER_astDataTypeFunction
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNodeInfo.type">
            MOJOSHADER_astNodeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNodeInfo.filename">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNodeInfo.line">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astGeneric.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpression.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpression.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astArguments.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astArguments.argument">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astArguments.next">
            MOJOSHADER_astArguments*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionUnary.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionUnary.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionUnary.operand">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionBinary.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionBinary.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionBinary.left">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionBinary.right">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionTernary.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionTernary.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionTernary.left">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionTernary.center">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionTernary.right">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionIdentifier.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionIdentifier.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionIdentifier.identifier">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionIdentifier.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionIntLiteral.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionIntLiteral.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionIntLiteral.value">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionFloatLiteral.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionFloatLiteral.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionFloatLiteral.value">
            double
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionStringLiteral.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionStringLiteral.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionStringLiteral.string">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionBooleanLiteral.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionBooleanLiteral.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionBooleanLiteral.value">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionConstructor.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionConstructor.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionConstructor.args">
            MOJOSHADER_astArguments*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionDerefStruct.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionDerefStruct.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionDerefStruct.identifier">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionDerefStruct.member">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionDerefStruct.isswizzle">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionDerefStruct.member_index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionCallFunction.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionCallFunction.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionCallFunction.identifier">
            MOJOSHADER_astExpressionIdentifier*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionCallFunction.args">
            MOJOSHADER_astArguments*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionCast.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionCast.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionCast.operand">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnit.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnit.next">
            MOJOSHADER_astCompilationUnit*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionParameters.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionParameters.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionParameters.input_modifier">
            MOJOSHADER_astInputModifier
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionParameters.identifier">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionParameters.semantic">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionParameters.interpolation_modifier">
            MOJOSHADER_astInterpolationModifier
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionParameters.initializer">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionParameters.next">
            MOJOSHADER_astFunctionParameters*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionSignature.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionSignature.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionSignature.identifier">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionSignature.params">
            MOJOSHADER_astFunctionParameters*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionSignature.storage_class">
            MOJOSHADER_astFunctionStorageClass
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astFunctionSignature.semantic">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astScalarOrArray.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astScalarOrArray.identifier">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astScalarOrArray.isarray">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astScalarOrArray.dimension">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astAnnotations.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astAnnotations.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astAnnotations.initializer">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astAnnotations.next">
            MOJOSHADER_astAnnotations*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astPackOffset.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astPackOffset.ident1">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astPackOffset.ident2">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableLowLevel.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableLowLevel.packoffset">
            MOJOSHADER_astPackOffset*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableLowLevel.register_name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructMembers.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructMembers.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructMembers.semantic">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructMembers.details">
            MOJOSHADER_astScalarOrArray*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructMembers.interpolation_mod">
            MOJOSHADER_astInterpolationModifier
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructMembers.next">
            MOJOSHADER_astStructMembers*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructDeclaration.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructDeclaration.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructDeclaration.name">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructDeclaration.members">
            MOJOSHADER_astStructMembers*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.attributes">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.anonymous_datatype">
            MOJOSHADER_astStructDeclaration*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.details">
            MOJOSHADER_astScalarOrArray*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.semantic">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.annotations">
            MOJOSHADER_astAnnotations*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.initializer">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.lowlevel">
            MOJOSHADER_astVariableLowLevel*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVariableDeclaration.next">
            MOJOSHADER_astVariableDeclaration*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astBlockStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astBlockStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astBlockStatement.statements">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astReturnStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astReturnStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astReturnStatement.expr">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astExpressionStatement.expr">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astIfStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astIfStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astIfStatement.attributes">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astIfStatement.expr">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astIfStatement.statement">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astIfStatement.else_statement">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astSwitchCases.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astSwitchCases.expr">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astSwitchCases.statement">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astSwitchCases.next">
            MOJOSHADER_astSwitchCases*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astSwitchStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astSwitchStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astSwitchStatement.attributes">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astSwitchStatement.expr">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astSwitchStatement.cases">
            MOJOSHADER_astSwitchCases*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astWhileStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astWhileStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astWhileStatement.unroll">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astWhileStatement.expr">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astWhileStatement.statement">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astForStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astForStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astForStatement.unroll">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astForStatement.var_decl">
            MOJOSHADER_astVariableDeclaration*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astForStatement.initializer">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astForStatement.looptest">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astForStatement.counter">
            MOJOSHADER_astExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astForStatement.statement">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astTypedef.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astTypedef.datatype">
            MOJOSHADER_astDataType*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astTypedef.isconst">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astTypedef.details">
            MOJOSHADER_astScalarOrArray*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astTypedefStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astTypedefStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astTypedefStatement.type_info">
            MOJOSHADER_astTypedef*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVarDeclStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVarDeclStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astVarDeclStatement.declaration">
            MOJOSHADER_astVariableDeclaration*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructStatement.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructStatement.next">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astStructStatement.struct_info">
            MOJOSHADER_astStructDeclaration*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitFunction.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitFunction.next">
            MOJOSHADER_astCompilationUnit*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitFunction.declaration">
            MOJOSHADER_astFunctionSignature*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitFunction.definition">
            MOJOSHADER_astStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitFunction.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitTypedef.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitTypedef.next">
            MOJOSHADER_astCompilationUnit*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitTypedef.type_info">
            MOJOSHADER_astTypedef*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitStruct.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitStruct.next">
            MOJOSHADER_astCompilationUnit*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitStruct.struct_info">
            MOJOSHADER_astStructDeclaration*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitVariable.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitVariable.next">
            MOJOSHADER_astCompilationUnit*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astCompilationUnitVariable.declaration">
            MOJOSHADER_astVariableDeclaration*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.ast">
            MOJOSHADER_astNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.generic">
            MOJOSHADER_astGeneric
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.expression">
            MOJOSHADER_astExpression
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.arguments">
            MOJOSHADER_astArguments
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.unary">
            MOJOSHADER_astExpressionUnary
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.binary">
            MOJOSHADER_astExpressionBinary
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.ternary">
            MOJOSHADER_astExpressionTernary
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.identifier">
            MOJOSHADER_astExpressionIdentifier
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.intliteral">
            MOJOSHADER_astExpressionIntLiteral
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.floatliteral">
            MOJOSHADER_astExpressionFloatLiteral
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.stringliteral">
            MOJOSHADER_astExpressionStringLiteral
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.boolliteral">
            MOJOSHADER_astExpressionBooleanLiteral
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.constructor">
            MOJOSHADER_astExpressionConstructor
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.derefstruct">
            MOJOSHADER_astExpressionDerefStruct
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.callfunc">
            MOJOSHADER_astExpressionCallFunction
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.cast">
            MOJOSHADER_astExpressionCast
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.compunit">
            MOJOSHADER_astCompilationUnit
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.params">
            MOJOSHADER_astFunctionParameters
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.funcsig">
            MOJOSHADER_astFunctionSignature
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.soa">
            MOJOSHADER_astScalarOrArray
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.annotations">
            MOJOSHADER_astAnnotations
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.packoffset">
            MOJOSHADER_astPackOffset
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.varlowlevel">
            MOJOSHADER_astVariableLowLevel
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.structmembers">
            MOJOSHADER_astStructMembers
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.structdecl">
            MOJOSHADER_astStructDeclaration
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.vardecl">
            MOJOSHADER_astVariableDeclaration
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.stmt">
            MOJOSHADER_astStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.emptystmt">
            MOJOSHADER_astEmptyStatement->MOJOSHADER_astStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.breakstmt">
            MOJOSHADER_astBreakStatement->MOJOSHADER_astStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.contstmt">
            MOJOSHADER_astContinueStatement->MOJOSHADER_astStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.discardstmt">
            MOJOSHADER_astDiscardStatement->MOJOSHADER_astStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.blockstmt">
            MOJOSHADER_astBlockStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.returnstmt">
            MOJOSHADER_astReturnStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.exprstmt">
            MOJOSHADER_astExpressionStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.ifstmt">
            MOJOSHADER_astIfStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.cases">
            MOJOSHADER_astSwitchCases
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.switchstmt">
            MOJOSHADER_astSwitchStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.whilestmt">
            MOJOSHADER_astWhileStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.dostmt">
            MOJOSHADER_astDoStatement->MOJOSHADER_astWhileStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.forstmt">
            MOJOSHADER_astForStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.typdef">
            MOJOSHADER_astTypedef
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.typedefstmt">
            MOJOSHADER_astTypedefStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.vardeclstmt">
            MOJOSHADER_astVarDeclStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.structstmt">
            MOJOSHADER_astStructStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.funcunit">
            MOJOSHADER_astCompilationUnitFunction
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.typedefunit">
            MOJOSHADER_astCompilationUnitTypedef
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.structunit">
            MOJOSHADER_astCompilationUnitStruct
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astNode.varunit">
            MOJOSHADER_astCompilationUnitVariable
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astData.error_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astData.errors">
            MOJOSHADER_error*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astData.source_profile">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astData.ast">
            MOJOSHADER_astNode*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astData.malloc">
            MOJOSHADER_malloc
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astData.free">
            MOJOSHADER_free
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astData.malloc_data">
            void*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_astData.opaque">
            void*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irNodeInfo.type">
            MOJOSHADER_irNodeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irNodeInfo.filename">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irNodeInfo.line">
            unsigned int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irGeneric.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExprInfo.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExprInfo.type">
            MOJOSHADER_astDataTypeType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExprInfo.elements">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irConstant.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irConstant.value">
            Anonymous_3a13e6d2_72d8_4c86_b5bf_9aff36c73111
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irTemp.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irTemp.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irBinOp.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irBinOp.op">
            MOJOSHADER_irBinOpType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irBinOp.left">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irBinOp.right">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irMemory.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irMemory.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irCall.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irCall.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irCall.args">
            MOJOSHADER_irExprList*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irESeq.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irESeq.stmt">
            MOJOSHADER_irStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irESeq.expr">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irArray.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irArray.array">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irArray.element">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irConvert.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irConvert.expr">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irSwizzle.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irSwizzle.expr">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irSwizzle.channels">
            char[4]
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irConstruct.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irConstruct.args">
            MOJOSHADER_irExprList*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.info">
            MOJOSHADER_irExprInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.constant">
            MOJOSHADER_irConstant
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.temp">
            MOJOSHADER_irTemp
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.binop">
            MOJOSHADER_irBinOp
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.memory">
            MOJOSHADER_irMemory
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.call">
            MOJOSHADER_irCall
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.eseq">
            MOJOSHADER_irESeq
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.array">
            MOJOSHADER_irArray
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.convert">
            MOJOSHADER_irConvert
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.swizzle">
            MOJOSHADER_irSwizzle
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExpression.construct">
            MOJOSHADER_irConstruct
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irMove.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irMove.dst">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irMove.src">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irMove.writemask">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExprStmt.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExprStmt.expr">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irJump.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irJump.label">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irCJump.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irCJump.cond">
            MOJOSHADER_irConditionType
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irCJump.left">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irCJump.right">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irCJump.iftrue">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irCJump.iffalse">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irSeq.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irSeq.first">
            MOJOSHADER_irStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irSeq.next">
            MOJOSHADER_irStatement*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irLabel.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irLabel.index">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irStatement.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irStatement.generic">
            MOJOSHADER_irGeneric
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irStatement.move">
            MOJOSHADER_irMove
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irStatement.expr">
            MOJOSHADER_irExprStmt
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irStatement.jump">
            MOJOSHADER_irJump
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irStatement.cjump">
            MOJOSHADER_irCJump
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irStatement.seq">
            MOJOSHADER_irSeq
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irStatement.label">
            MOJOSHADER_irLabel
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irStatement.discard">
            MOJOSHADER_irDiscard->MOJOSHADER_irGeneric
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExprList.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExprList.expr">
            MOJOSHADER_irExpression*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irExprList.next">
            MOJOSHADER_irExprList*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irMisc.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irMisc.generic">
            MOJOSHADER_irGeneric
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irMisc.exprlist">
            MOJOSHADER_irExprList
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irNode.ir">
            MOJOSHADER_irNodeInfo
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irNode.generic">
            MOJOSHADER_irGeneric
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irNode.expr">
            MOJOSHADER_irExpression
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irNode.stmt">
            MOJOSHADER_irStatement
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_irNode.misc">
            MOJOSHADER_irMisc
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.error_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.errors">
            MOJOSHADER_error*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.warning_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.warnings">
            MOJOSHADER_error*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.source_profile">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.output">
            char*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.output_len">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.symbol_count">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.symbols">
            MOJOSHADER_symbol*
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.malloc">
            MOJOSHADER_malloc
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.free">
            MOJOSHADER_free
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_compileData.malloc_data">
            void*
        </member>
        <member name="T:TwoMGFX.MojoShader.MOJOSHADER_glGetProcAddress">
             Return Type: void*
            fnname: char*
            data: void*
        </member>
        <member name="F:TwoMGFX.MojoShader.Anonymous_5371dd6a_e42a_47c1_91d1_a2af9a8283be.f">
            float[4]
        </member>
        <member name="F:TwoMGFX.MojoShader.Anonymous_5371dd6a_e42a_47c1_91d1_a2af9a8283be.i">
            int[4]
        </member>
        <member name="F:TwoMGFX.MojoShader.Anonymous_5371dd6a_e42a_47c1_91d1_a2af9a8283be.b">
            int
        </member>
        <member name="F:TwoMGFX.MojoShader.Anonymous_3a13e6d2_72d8_4c86_b5bf_9aff36c73111.ival">
            int[16]
        </member>
        <member name="F:TwoMGFX.MojoShader.Anonymous_3a13e6d2_72d8_4c86_b5bf_9aff36c73111.fval">
            float[16]
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_uniformType.MOJOSHADER_UNIFORM_UNKNOWN">
            MOJOSHADER_UNIFORM_UNKNOWN -> -1
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_samplerType.MOJOSHADER_SAMPLER_UNKNOWN">
            MOJOSHADER_SAMPLER_UNKNOWN -> -1
        </member>
        <member name="F:TwoMGFX.MojoShader.MOJOSHADER_usage.MOJOSHADER_USAGE_UNKNOWN">
            MOJOSHADER_USAGE_UNKNOWN -> -1
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_version">
            Return Type: int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_changeset">
            Return Type: char*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_maxShaderModel(System.String)">
             Return Type: int
            profile: char*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_parseExpression(System.Byte[],System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
             Return Type: MOJOSHADER_parseData*
            tokenbuf: char*
            bufsize: int
            m: MOJOSHADER_malloc
            f: MOJOSHADER_free
            d: void*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_runPreshader(TwoMGFX.MojoShader.MOJOSHADER_preshader@,System.Single@,System.Single@)">
             Return Type: void
            param0: MOJOSHADER_preshader*
            param1: float*
            param2: float*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_parse(System.String,System.Byte[],System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
             Return Type: MOJOSHADER_parseData*
            profile: char*
            tokenbuf: char*
            bufsize: int
            swiz: MOJOSHADER_swizzle*
            swizcount: int
            smap: MOJOSHADER_samplerMap*
            smapcount: int
            m: MOJOSHADER_malloc
            f: MOJOSHADER_free
            d: void*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_freeParseData(TwoMGFX.MojoShader.MOJOSHADER_parseData@)">
             Return Type: void
            data: MOJOSHADER_parseData*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_parseEffect(System.String,System.String,System.Int32,TwoMGFX.MojoShader.MOJOSHADER_swizzle@,System.Int32,TwoMGFX.MojoShader.MOJOSHADER_samplerMap@,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
             Return Type: MOJOSHADER_effect*
            profile: char*
            buf: char*
            _len: int
            swiz: MOJOSHADER_swizzle*
            swizcount: int
            smap: MOJOSHADER_samplerMap*
            smapcount: int
            m: MOJOSHADER_malloc
            f: MOJOSHADER_free
            d: void*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_freeEffect(TwoMGFX.MojoShader.MOJOSHADER_effect@)">
             Return Type: void
            effect: MOJOSHADER_effect*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_preprocess(System.String,System.String,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_preprocessorDefine@,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_includeOpen,TwoMGFX.MojoShader.MOJOSHADER_includeClose,System.IntPtr,System.IntPtr,System.IntPtr)">
             Return Type: MOJOSHADER_preprocessData*
            filename: char*
            source: char*
            sourcelen: unsigned int
            defines: MOJOSHADER_preprocessorDefine*
            define_count: unsigned int
            include_open: MOJOSHADER_includeOpen
            include_close: MOJOSHADER_includeClose
            m: MOJOSHADER_malloc
            f: MOJOSHADER_free
            d: void*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_freePreprocessData(TwoMGFX.MojoShader.MOJOSHADER_preprocessData@)">
             Return Type: void
            data: MOJOSHADER_preprocessData*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_assemble(System.String,System.String,System.UInt32,System.IntPtr@,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_symbol@,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_preprocessorDefine@,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_includeOpen,TwoMGFX.MojoShader.MOJOSHADER_includeClose,System.IntPtr,System.IntPtr,System.IntPtr)">
             Return Type: MOJOSHADER_parseData*
            filename: char*
            source: char*
            sourcelen: unsigned int
            comments: char**
            comment_count: unsigned int
            symbols: MOJOSHADER_symbol*
            symbol_count: unsigned int
            defines: MOJOSHADER_preprocessorDefine*
            define_count: unsigned int
            include_open: MOJOSHADER_includeOpen
            include_close: MOJOSHADER_includeClose
            m: MOJOSHADER_malloc
            f: MOJOSHADER_free
            d: void*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_parseAst(System.String,System.String,System.String,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_preprocessorDefine@,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_includeOpen,TwoMGFX.MojoShader.MOJOSHADER_includeClose,System.IntPtr,System.IntPtr,System.IntPtr)">
             Return Type: MOJOSHADER_astData*
            srcprofile: char*
            filename: char*
            source: char*
            sourcelen: unsigned int
            defs: MOJOSHADER_preprocessorDefine*
            define_count: unsigned int
            include_open: MOJOSHADER_includeOpen
            include_close: MOJOSHADER_includeClose
            m: MOJOSHADER_malloc
            f: MOJOSHADER_free
            d: void*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_freeAstData(TwoMGFX.MojoShader.MOJOSHADER_astData@)">
             Return Type: void
            data: MOJOSHADER_astData*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_compile(System.String,System.String,System.String,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_preprocessorDefine@,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_includeOpen,TwoMGFX.MojoShader.MOJOSHADER_includeClose,System.IntPtr,System.IntPtr,System.IntPtr)">
             Return Type: MOJOSHADER_compileData*
            srcprofile: char*
            filename: char*
            source: char*
            sourcelen: unsigned int
            defs: MOJOSHADER_preprocessorDefine*
            define_count: unsigned int
            include_open: MOJOSHADER_includeOpen
            include_close: MOJOSHADER_includeClose
            m: MOJOSHADER_malloc
            f: MOJOSHADER_free
            d: void*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_freeCompileData(TwoMGFX.MojoShader.MOJOSHADER_compileData@)">
             Return Type: void
            data: MOJOSHADER_compileData*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glAvailableProfiles(TwoMGFX.MojoShader.MOJOSHADER_glGetProcAddress,System.IntPtr,System.IntPtr@,System.Int32)">
             Return Type: int
            lookup: MOJOSHADER_glGetProcAddress
            d: void*
            profs: char**
            size: int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glBestProfile(TwoMGFX.MojoShader.MOJOSHADER_glGetProcAddress,System.IntPtr)">
             Return Type: char*
            lookup: MOJOSHADER_glGetProcAddress
            d: void*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glGetError">
            Return Type: char*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glMaxUniforms(TwoMGFX.MojoShader.MOJOSHADER_shaderType)">
             Return Type: int
            shader_type: MOJOSHADER_shaderType->Anonymous_96517ad6_cc69_4542_8537_054e63919d54
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetVertexShaderUniformF(System.UInt32,System.Single@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: float*
            vec4count: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glGetVertexShaderUniformF(System.UInt32,System.Single@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: float*
            vec4count: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetVertexShaderUniformI(System.UInt32,System.Int32@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: int*
            ivec4count: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glGetVertexShaderUniformI(System.UInt32,System.Int32@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: int*
            ivec4count: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetVertexShaderUniformB(System.UInt32,System.Int32@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: int*
            bcount: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glGetVertexShaderUniformB(System.UInt32,System.Int32@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: int*
            bcount: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetPixelShaderUniformF(System.UInt32,System.Single@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: float*
            vec4count: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glGetPixelShaderUniformF(System.UInt32,System.Single@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: float*
            vec4count: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetPixelShaderUniformI(System.UInt32,System.Int32@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: int*
            ivec4count: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glGetPixelShaderUniformI(System.UInt32,System.Int32@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: int*
            ivec4count: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetPixelShaderUniformB(System.UInt32,System.Int32@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: int*
            bcount: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glGetPixelShaderUniformB(System.UInt32,System.Int32@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: int*
            bcount: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetLegacyBumpMapEnv(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             Return Type: void
            sampler: unsigned int
            mat00: float
            mat01: float
            mat10: float
            mat11: float
            lscale: float
            loffset: float
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetVertexAttribute(TwoMGFX.MojoShader.MOJOSHADER_usage,System.Int32,System.UInt32,TwoMGFX.MojoShader.MOJOSHADER_attributeType,System.Int32,System.UInt32,System.IntPtr)">
             Return Type: void
            usage: MOJOSHADER_usage->Anonymous_9c01433d_7bb5_4c50_bf77_e65cef0661b5
            index: int
            size: unsigned int
            type: MOJOSHADER_attributeType->Anonymous_2f2591e6_1657_418c_9f54_80f3acd43cbe
            normalized: int
            stride: unsigned int
            ptr: void*
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetVertexPreshaderUniformF(System.UInt32,System.Single@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: float*
            vec4n: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glGetVertexPreshaderUniformF(System.UInt32,System.Single@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: float*
            vec4n: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glSetPixelPreshaderUniformF(System.UInt32,System.Single@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: float*
            vec4n: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glGetPixelPreshaderUniformF(System.UInt32,System.Single@,System.UInt32)">
             Return Type: void
            idx: unsigned int
            data: float*
            vec4n: unsigned int
        </member>
        <member name="M:TwoMGFX.MojoShader.NativeMethods.MOJOSHADER_glProgramReady">
            Return Type: void
        </member>
        <member name="M:TwoMGFX.ParseTree.Eval(System.Object[])">
            <summary>
            this is the entry point for executing and evaluating the parse tree.
            </summary>
            <param name="paramlist">additional optional input parameters</param>
            <returns>the output of the evaluation function</returns>
        </member>
        <member name="M:TwoMGFX.ParseNode.Eval(TwoMGFX.ParseTree,System.Object[])">
            <summary>
            this implements the evaluation functionality, cannot be used directly
            </summary>
            <param name="tree">the parsetree itself</param>
            <param name="paramlist">optional input parameters</param>
            <returns>a partial result of the evaluation</returns>
        </member>
        <member name="M:TwoMGFX.Scanner.Scan(TwoMGFX.TokenType[])">
            <summary>
            executes a lookahead of the next token
            and will advance the scan on the input string
            </summary>
            <returns></returns>
        </member>
        <member name="M:TwoMGFX.Scanner.LookAhead(TwoMGFX.TokenType[])">
            <summary>
            returns token with longest best match
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.CreateFromPoints(System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Create a bounding box from the given list of points.
            </summary>
            <param name="points">The list of Vector3 instances defining the point cloud to bound</param>
            <returns>A bounding box that encapsulates the given point cloud.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given list has no points.</exception>
        </member>
        <member name="T:Microsoft.Xna.Framework.BoundingFrustum">
            <summary>
            Defines a viewing frustum for intersection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.BoundingFrustum.PlaneCount">
            <summary>
            The number of planes in the frustum.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.BoundingFrustum.CornerCount">
            <summary>
            The number of corner points in the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Matrix">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Xna.Framework.BoundingFrustum.Matrix"/> of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Near">
            <summary>
            Gets the near plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Far">
            <summary>
            Gets the far plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Left">
            <summary>
            Gets the left plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Right">
            <summary>
            Gets the right plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Top">
            <summary>
            Gets the top plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Bottom">
            <summary>
            Gets the bottom plane of the frustum.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.#ctor(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Constructs the frustum by extracting the view planes from a matrix.
            </summary>
            <param name="value">Combined matrix which usually is (View * Projection).</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.op_Equality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.op_Inequality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.
            </summary>
            <param name="box">A <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.
            </summary>
            <param name="box">A <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> for testing.</param>
            <param name="result">Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="frustum">A <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.
            </summary>
            <param name="sphere">A <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.
            </summary>
            <param name="sphere">A <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> for testing.</param>
            <param name="result">Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="point">A <see cref="T:Microsoft.Xna.Framework.Vector3"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="point">A <see cref="T:Microsoft.Xna.Framework.Vector3"/> for testing.</param>
            <param name="result">Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Equals(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.GetCorners">
            <summary>
            Returns a copy of internal corners array.
            </summary>
            <returns>The array of corners.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.GetCorners(Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Returns a copy of internal corners array.
            </summary>
            <param name="corners">The array which values will be replaced to corner values of this instance. It must have size of <see cref="F:Microsoft.Xna.Framework.BoundingFrustum.CornerCount"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="box">A <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> for intersection test.</param>
            <returns><c>true</c> if specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="box">A <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> for intersection test.</param>
            <param name="result"><c>true</c> if specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="frustum">An other <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> for intersection test.</param>
            <returns><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="sphere">A <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> for intersection test.</param>
            <returns><c>true</c> if specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="sphere">A <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> for intersection test.</param>
            <param name="result"><c>true</c> if specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane)">
            <summary>
            Gets type of intersection between specified <see cref="T:Microsoft.Xna.Framework.Plane"/> and this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="plane">A <see cref="T:Microsoft.Xna.Framework.Plane"/> for intersection test.</param>
            <returns>A plane intersection type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.PlaneIntersectionType@)">
            <summary>
            Gets type of intersection between specified <see cref="T:Microsoft.Xna.Framework.Plane"/> and this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="plane">A <see cref="T:Microsoft.Xna.Framework.Plane"/> for intersection test.</param>
            <param name="result">A plane intersection type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray)">
            <summary>
            Gets the distance of intersection of <see cref="T:Microsoft.Xna.Framework.Ray"/> and this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> or null if no intersection happens.
            </summary>
            <param name="ray">A <see cref="T:Microsoft.Xna.Framework.Ray"/> for intersection test.</param>
            <returns>Distance at which ray intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> or null if no intersection happens.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray@,System.Nullable{System.Single}@)">
            <summary>
            Gets the distance of intersection of <see cref="T:Microsoft.Xna.Framework.Ray"/> and this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> or null if no intersection happens.
            </summary>
            <param name="ray">A <see cref="T:Microsoft.Xna.Framework.Ray"/> for intersection test.</param>
            <param name="result">Distance at which ray intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> or null if no intersection happens as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> in the format:
            {Near:[nearPlane] Far:[farPlane] Left:[leftPlane] Right:[rightPlane] Top:[topPlane] Bottom:[bottomPlane]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.BoundingSphere">
            <summary>
            Describes a sphere in 3D-space for bounding operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.BoundingSphere.Center">
            <summary>
            The sphere center.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.BoundingSphere.Radius">
            <summary>
            The sphere radius.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.#ctor(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Constructs a bounding sphere with the specified center and radius.  
            </summary>
            <param name="center">The sphere center.</param>
            <param name="radius">The sphere radius.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Test if a bounding box is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a bounding box is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Test if a frustum is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="frustum">The frustum for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingFrustum@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a frustum is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="frustum">The frustum for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Test if a sphere is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a sphere is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Test if a point is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="point">The vector in 3D-space for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a point is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="point">The vector in 3D-space for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromBoundingBox(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.
            </summary>
            <param name="box">The box to create the sphere from.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromBoundingBox(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.BoundingSphere@)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.
            </summary>
            <param name="box">The box to create the sphere from.</param>
            <param name="result">The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromFrustum(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain a specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="frustum">The frustum to create the sphere from.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromPoints(System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain a specified list of points in 3D-space. 
            </summary>
            <param name="points">List of point to create the sphere from.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateMerged(Microsoft.Xna.Framework.BoundingSphere,Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain two spheres.
            </summary>
            <param name="original">First sphere.</param>
            <param name="additional">Second sphere.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateMerged(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.BoundingSphere@)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain two spheres.
            </summary>
            <param name="original">First sphere.</param>
            <param name="additional">Second sphere.</param>
            <param name="result">The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Equals(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <returns><c>true</c> if <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this sphere; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingBox@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <param name="result"><c>true</c> if <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this sphere; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Gets whether or not the other <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <returns><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this sphere; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingSphere@,System.Boolean@)">
            <summary>
            Gets whether or not the other <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <param name="result"><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this sphere; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Plane)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.Plane"/> intersects with this sphere.
            </summary>
            <param name="plane">The plane for testing.</param>
            <returns>Type of intersection.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.PlaneIntersectionType@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.Plane"/> intersects with this sphere.
            </summary>
            <param name="plane">The plane for testing.</param>
            <param name="result">Type of intersection as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Ray)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.Ray"/> intersects with this sphere.
            </summary>
            <param name="ray">The ray for testing.</param>
            <returns>Distance of ray intersection or <c>null</c> if there is no intersection.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Ray@,System.Nullable{System.Single}@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.Ray"/> intersects with this sphere.
            </summary>
            <param name="ray">The ray for testing.</param>
            <param name="result">Distance of ray intersection or <c>null</c> if there is no intersection as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> in the format:
            {Center:[<see cref="F:Microsoft.Xna.Framework.BoundingSphere.Center"/>] Radius:[<see cref="F:Microsoft.Xna.Framework.BoundingSphere.Radius"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Transform(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that contains a transformation of translation and scale from this sphere by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Transform(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.BoundingSphere@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that contains a transformation of translation and scale from this sphere by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.op_Equality(Microsoft.Xna.Framework.BoundingSphere,Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.op_Inequality(Microsoft.Xna.Framework.BoundingSphere,Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Color">
            <summary>
            Describes a 32-bit packed color.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.UInt32)">
            <summary>
            Constructs an RGBA color from a packed value.
            The value is a 32-bit unsigned integer, with R in the least significant octet.
            </summary>
            <param name="packedValue">The packed value.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs an RGBA color from the XYZW unit length components of a vector.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Vector4"/> representing color.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Constructs an RGBA color from the XYZ unit length components of a vector. Alpha value will be opaque.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Vector3"/> representing color.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Constructs an RGBA color from a <see cref="T:Microsoft.Xna.Framework.Color"/> and an alpha value.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Color"/> for RGB values of new <see cref="T:Microsoft.Xna.Framework.Color"/> instance.</param>
            <param name="alpha">The alpha component value from 0 to 255.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Constructs an RGBA color from color and alpha value.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Color"/> for RGB values of new <see cref="T:Microsoft.Xna.Framework.Color"/> instance.</param>
            <param name="alpha">Alpha component value from 0.0f to 1.0f.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs an RGBA color from scalars representing red, green and blue values. Alpha value will be opaque.
            </summary>
            <param name="r">Red component value from 0.0f to 1.0f.</param>
            <param name="g">Green component value from 0.0f to 1.0f.</param>
            <param name="b">Blue component value from 0.0f to 1.0f.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs an RGBA color from scalars representing red, green, blue and alpha values.
            </summary>
            <param name="r">Red component value from 0.0f to 1.0f.</param>
            <param name="g">Green component value from 0.0f to 1.0f.</param>
            <param name="b">Blue component value from 0.0f to 1.0f.</param>
            <param name="alpha">Alpha component value from 0.0f to 1.0f.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an RGBA color from scalars representing red, green and blue values. Alpha value will be opaque.
            </summary>
            <param name="r">Red component value from 0 to 255.</param>
            <param name="g">Green component value from 0 to 255.</param>
            <param name="b">Blue component value from 0 to 255.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an RGBA color from scalars representing red, green, blue and alpha values.
            </summary>
            <param name="r">Red component value from 0 to 255.</param>
            <param name="g">Green component value from 0 to 255.</param>
            <param name="b">Blue component value from 0 to 255.</param>
            <param name="alpha">Alpha component value from 0 to 255.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Constructs an RGBA color from scalars representing red, green, blue and alpha values.
            </summary>
            <remarks>
            This overload sets the values directly without clamping, and may therefore be faster than the other overloads.
            </remarks>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="alpha"></param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.B">
            <summary>
            Gets or sets the blue component.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.G">
            <summary>
            Gets or sets the green component.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.R">
            <summary>
            Gets or sets the red component.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.A">
            <summary>
            Gets or sets the alpha component.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Equality(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Color"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Inequality(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Color"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Color"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified object.
            </summary>
            <param name="obj">The <see cref="T:Microsoft.Xna.Framework.Color"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.TransparentBlack">
            <summary>
            TransparentBlack color (R:0,G:0,B:0,A:0).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Transparent">
            <summary>
            Transparent color (R:0,G:0,B:0,A:0).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.AliceBlue">
            <summary>
            AliceBlue color (R:240,G:248,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.AntiqueWhite">
            <summary>
            AntiqueWhite color (R:250,G:235,B:215,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Aqua">
            <summary>
            Aqua color (R:0,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Aquamarine">
            <summary>
            Aquamarine color (R:127,G:255,B:212,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Azure">
            <summary>
            Azure color (R:240,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Beige">
            <summary>
            Beige color (R:245,G:245,B:220,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Bisque">
            <summary>
            Bisque color (R:255,G:228,B:196,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Black">
            <summary>
            Black color (R:0,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.BlanchedAlmond">
            <summary>
            BlanchedAlmond color (R:255,G:235,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Blue">
            <summary>
            Blue color (R:0,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.BlueViolet">
            <summary>
            BlueViolet color (R:138,G:43,B:226,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Brown">
            <summary>
            Brown color (R:165,G:42,B:42,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.BurlyWood">
            <summary>
            BurlyWood color (R:222,G:184,B:135,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.CadetBlue">
            <summary>
            CadetBlue color (R:95,G:158,B:160,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Chartreuse">
            <summary>
            Chartreuse color (R:127,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Chocolate">
            <summary>
            Chocolate color (R:210,G:105,B:30,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Coral">
            <summary>
            Coral color (R:255,G:127,B:80,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.CornflowerBlue">
            <summary>
            CornflowerBlue color (R:100,G:149,B:237,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Cornsilk">
            <summary>
            Cornsilk color (R:255,G:248,B:220,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Crimson">
            <summary>
            Crimson color (R:220,G:20,B:60,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Cyan">
            <summary>
            Cyan color (R:0,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkBlue">
            <summary>
            DarkBlue color (R:0,G:0,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkCyan">
            <summary>
            DarkCyan color (R:0,G:139,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkGoldenrod">
            <summary>
            DarkGoldenrod color (R:184,G:134,B:11,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkGray">
            <summary>
            DarkGray color (R:169,G:169,B:169,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkGreen">
            <summary>
            DarkGreen color (R:0,G:100,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkKhaki">
            <summary>
            DarkKhaki color (R:189,G:183,B:107,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkMagenta">
            <summary>
            DarkMagenta color (R:139,G:0,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkOliveGreen">
            <summary>
            DarkOliveGreen color (R:85,G:107,B:47,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkOrange">
            <summary>
            DarkOrange color (R:255,G:140,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkOrchid">
            <summary>
            DarkOrchid color (R:153,G:50,B:204,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkRed">
            <summary>
            DarkRed color (R:139,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSalmon">
            <summary>
            DarkSalmon color (R:233,G:150,B:122,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSeaGreen">
            <summary>
            DarkSeaGreen color (R:143,G:188,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSlateBlue">
            <summary>
            DarkSlateBlue color (R:72,G:61,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSlateGray">
            <summary>
            DarkSlateGray color (R:47,G:79,B:79,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkTurquoise">
            <summary>
            DarkTurquoise color (R:0,G:206,B:209,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkViolet">
            <summary>
            DarkViolet color (R:148,G:0,B:211,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DeepPink">
            <summary>
            DeepPink color (R:255,G:20,B:147,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DeepSkyBlue">
            <summary>
            DeepSkyBlue color (R:0,G:191,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DimGray">
            <summary>
            DimGray color (R:105,G:105,B:105,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DodgerBlue">
            <summary>
            DodgerBlue color (R:30,G:144,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Firebrick">
            <summary>
            Firebrick color (R:178,G:34,B:34,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.FloralWhite">
            <summary>
            FloralWhite color (R:255,G:250,B:240,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.ForestGreen">
            <summary>
            ForestGreen color (R:34,G:139,B:34,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Fuchsia">
            <summary>
            Fuchsia color (R:255,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Gainsboro">
            <summary>
            Gainsboro color (R:220,G:220,B:220,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.GhostWhite">
            <summary>
            GhostWhite color (R:248,G:248,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Gold">
            <summary>
            Gold color (R:255,G:215,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Goldenrod">
            <summary>
            Goldenrod color (R:218,G:165,B:32,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Gray">
            <summary>
            Gray color (R:128,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Green">
            <summary>
            Green color (R:0,G:128,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.GreenYellow">
            <summary>
            GreenYellow color (R:173,G:255,B:47,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Honeydew">
            <summary>
            Honeydew color (R:240,G:255,B:240,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.HotPink">
            <summary>
            HotPink color (R:255,G:105,B:180,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.IndianRed">
            <summary>
            IndianRed color (R:205,G:92,B:92,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Indigo">
            <summary>
            Indigo color (R:75,G:0,B:130,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Ivory">
            <summary>
            Ivory color (R:255,G:255,B:240,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Khaki">
            <summary>
            Khaki color (R:240,G:230,B:140,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Lavender">
            <summary>
            Lavender color (R:230,G:230,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LavenderBlush">
            <summary>
            LavenderBlush color (R:255,G:240,B:245,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LawnGreen">
            <summary>
            LawnGreen color (R:124,G:252,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LemonChiffon">
            <summary>
            LemonChiffon color (R:255,G:250,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightBlue">
            <summary>
            LightBlue color (R:173,G:216,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightCoral">
            <summary>
            LightCoral color (R:240,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightCyan">
            <summary>
            LightCyan color (R:224,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightGoldenrodYellow">
            <summary>
            LightGoldenrodYellow color (R:250,G:250,B:210,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightGray">
            <summary>
            LightGray color (R:211,G:211,B:211,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightGreen">
            <summary>
            LightGreen color (R:144,G:238,B:144,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightPink">
            <summary>
            LightPink color (R:255,G:182,B:193,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSalmon">
            <summary>
            LightSalmon color (R:255,G:160,B:122,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSeaGreen">
            <summary>
            LightSeaGreen color (R:32,G:178,B:170,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSkyBlue">
            <summary>
            LightSkyBlue color (R:135,G:206,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSlateGray">
            <summary>
            LightSlateGray color (R:119,G:136,B:153,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSteelBlue">
            <summary>
            LightSteelBlue color (R:176,G:196,B:222,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightYellow">
            <summary>
            LightYellow color (R:255,G:255,B:224,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Lime">
            <summary>
            Lime color (R:0,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LimeGreen">
            <summary>
            LimeGreen color (R:50,G:205,B:50,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Linen">
            <summary>
            Linen color (R:250,G:240,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Magenta">
            <summary>
            Magenta color (R:255,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Maroon">
            <summary>
            Maroon color (R:128,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumAquamarine">
            <summary>
            MediumAquamarine color (R:102,G:205,B:170,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumBlue">
            <summary>
            MediumBlue color (R:0,G:0,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumOrchid">
            <summary>
            MediumOrchid color (R:186,G:85,B:211,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumPurple">
            <summary>
            MediumPurple color (R:147,G:112,B:219,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumSeaGreen">
            <summary>
            MediumSeaGreen color (R:60,G:179,B:113,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumSlateBlue">
            <summary>
            MediumSlateBlue color (R:123,G:104,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumSpringGreen">
            <summary>
            MediumSpringGreen color (R:0,G:250,B:154,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumTurquoise">
            <summary>
            MediumTurquoise color (R:72,G:209,B:204,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumVioletRed">
            <summary>
            MediumVioletRed color (R:199,G:21,B:133,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MidnightBlue">
            <summary>
            MidnightBlue color (R:25,G:25,B:112,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MintCream">
            <summary>
            MintCream color (R:245,G:255,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MistyRose">
            <summary>
            MistyRose color (R:255,G:228,B:225,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Moccasin">
            <summary>
            Moccasin color (R:255,G:228,B:181,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MonoGameOrange">
            <summary>
            MonoGame orange theme color (R:231,G:60,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.NavajoWhite">
            <summary>
            NavajoWhite color (R:255,G:222,B:173,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Navy">
            <summary>
            Navy color (R:0,G:0,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.OldLace">
            <summary>
            OldLace color (R:253,G:245,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Olive">
            <summary>
            Olive color (R:128,G:128,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.OliveDrab">
            <summary>
            OliveDrab color (R:107,G:142,B:35,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Orange">
            <summary>
            Orange color (R:255,G:165,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.OrangeRed">
            <summary>
            OrangeRed color (R:255,G:69,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Orchid">
            <summary>
            Orchid color (R:218,G:112,B:214,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleGoldenrod">
            <summary>
            PaleGoldenrod color (R:238,G:232,B:170,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleGreen">
            <summary>
            PaleGreen color (R:152,G:251,B:152,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleTurquoise">
            <summary>
            PaleTurquoise color (R:175,G:238,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleVioletRed">
            <summary>
            PaleVioletRed color (R:219,G:112,B:147,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PapayaWhip">
            <summary>
            PapayaWhip color (R:255,G:239,B:213,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PeachPuff">
            <summary>
            PeachPuff color (R:255,G:218,B:185,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Peru">
            <summary>
            Peru color (R:205,G:133,B:63,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Pink">
            <summary>
            Pink color (R:255,G:192,B:203,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Plum">
            <summary>
            Plum color (R:221,G:160,B:221,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PowderBlue">
            <summary>
            PowderBlue color (R:176,G:224,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Purple">
            <summary>
             Purple color (R:128,G:0,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Red">
            <summary>
            Red color (R:255,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.RosyBrown">
            <summary>
            RosyBrown color (R:188,G:143,B:143,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.RoyalBlue">
            <summary>
            RoyalBlue color (R:65,G:105,B:225,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SaddleBrown">
            <summary>
            SaddleBrown color (R:139,G:69,B:19,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Salmon">
            <summary>
            Salmon color (R:250,G:128,B:114,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SandyBrown">
            <summary>
            SandyBrown color (R:244,G:164,B:96,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SeaGreen">
            <summary>
            SeaGreen color (R:46,G:139,B:87,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SeaShell">
            <summary>
            SeaShell color (R:255,G:245,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Sienna">
            <summary>
            Sienna color (R:160,G:82,B:45,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Silver">
            <summary>
            Silver color (R:192,G:192,B:192,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SkyBlue">
            <summary>
            SkyBlue color (R:135,G:206,B:235,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SlateBlue">
            <summary>
            SlateBlue color (R:106,G:90,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SlateGray">
            <summary>
            SlateGray color (R:112,G:128,B:144,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Snow">
            <summary>
            Snow color (R:255,G:250,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SpringGreen">
            <summary>
            SpringGreen color (R:0,G:255,B:127,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SteelBlue">
            <summary>
            SteelBlue color (R:70,G:130,B:180,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Tan">
            <summary>
            Tan color (R:210,G:180,B:140,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Teal">
            <summary>
            Teal color (R:0,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Thistle">
            <summary>
            Thistle color (R:216,G:191,B:216,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Tomato">
            <summary>
            Tomato color (R:255,G:99,B:71,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Turquoise">
            <summary>
            Turquoise color (R:64,G:224,B:208,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Violet">
            <summary>
            Violet color (R:238,G:130,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Wheat">
            <summary>
            Wheat color (R:245,G:222,B:179,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.White">
            <summary>
            White color (R:255,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.WhiteSmoke">
            <summary>
            WhiteSmoke color (R:245,G:245,B:245,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Yellow">
            <summary>
            Yellow color (R:255,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.YellowGreen">
            <summary>
            YellowGreen color (R:154,G:205,B:50,A:255).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Lerp(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Performs linear interpolation of <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="value2">Destination <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="amount">Interpolation factor.</param>
            <returns>Interpolated <see cref="T:Microsoft.Xna.Framework.Color"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.LerpPrecise(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            <see cref="M:Microsoft.Xna.Framework.Color.Lerp(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single)"/> should be used instead of this function.
            </summary>
            <returns>Interpolated <see cref="T:Microsoft.Xna.Framework.Color"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Multiply(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Multiply <see cref="T:Microsoft.Xna.Framework.Color"/> by value.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="scale">Multiplicator.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Multiply(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Multiply <see cref="T:Microsoft.Xna.Framework.Color"/> by value.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="scale">Multiplicator.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToVector3">
            <summary>
            Gets a <see cref="T:Microsoft.Xna.Framework.Vector3"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Vector3"/> representation for this object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToVector4">
            <summary>
            Gets a <see cref="T:Microsoft.Xna.Framework.Vector4"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Vector4"/> representation for this object.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PackedValue">
            <summary>
            Gets or sets packed value of this <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Color"/> in the format:
            {R:[red] G:[green] B:[blue] A:[alpha]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Color"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.FromNonPremultiplied(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Translate a non-premultipled alpha <see cref="T:Microsoft.Xna.Framework.Color"/> to a <see cref="T:Microsoft.Xna.Framework.Color"/> that contains premultiplied alpha.
            </summary>
            <param name="vector">A <see cref="T:Microsoft.Xna.Framework.Vector4"/> representing color.</param>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Color"/> which contains premultiplied alpha data.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.FromNonPremultiplied(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Translate a non-premultipled alpha <see cref="T:Microsoft.Xna.Framework.Color"/> to a <see cref="T:Microsoft.Xna.Framework.Color"/> that contains premultiplied alpha.
            </summary>
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value.</param>
            <param name="a">Alpha component value.</param>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Color"/> which contains premultiplied alpha data.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Equals(Microsoft.Xna.Framework.Color)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Color"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.ContainmentType">
            <summary>
            Defines how the bounding volumes intersects or contain one another.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.ContainmentType.Disjoint">
            <summary>
            Indicates that there is no overlap between two bounding volumes.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.ContainmentType.Contains">
            <summary>
            Indicates that one bounding volume completely contains another volume.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.ContainmentType.Intersects">
            <summary>
            Indicates that bounding volumes partially overlap one another.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.EventHelpers">
            <summary>
            Provides helper methods to make it easier
            to safely raise events.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.EventHelpers.Raise``1(System.Object,System.EventHandler{``0},``0)">
            <summary>
            Safely raises an event by storing a copy of the event's delegate
            in the <paramref name="handler"/> parameter and checking it for
            null before invoking it.
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <param name="sender">The object raising the event.</param>
            <param name="handler"><see cref="T:System.EventHandler`1"/> to be invoked</param>
            <param name="e">The <typeparamref name="TEventArgs"/> passed to <see cref="T:System.EventHandler`1"/></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.EventHelpers.Raise(System.Object,System.EventHandler,System.EventArgs)">
            <summary>
            Safely raises an event by storing a copy of the event's delegate
            in the <paramref name="handler"/> parameter and checking it for
            null before invoking it.
            </summary>
            <param name="sender">The object raising the event.</param>
            <param name="handler"><see cref="T:System.EventHandler"/> to be invoked</param>
            <param name="e">The <see cref="T:System.EventArgs"/> passed to <see cref="T:System.EventHandler"/></param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ColorWriteChannels">
            <summary>
            Defines the color channels for render target blending operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.None">
            <summary>
            No channels selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.Red">
            <summary>
            Red channel selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.Green">
            <summary>
            Green channel selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.Blue">
            <summary>
            Blue channel selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.Alpha">
            <summary>
            Alpha channel selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.All">
            <summary>
            All channels selected.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EffectParameterClass">
            <summary>
            Defines classes for effect parameters and shader constants.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Scalar">
            <summary>
            Scalar class type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Vector">
            <summary>
            Vector class type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Matrix">
            <summary>
            Matrix class type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Object">
            <summary>
            Class type for textures, shaders or strings. 
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Struct">
            <summary>
            Structure class type.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EffectParameterType">
            <summary>
            Defines types for effect parameters and shader constants.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Void">
            <summary>
            Pointer to void type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Bool">
            <summary>
            Boolean type. Any non-zero will be <c>true</c>; <c>false</c> otherwise.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Int32">
            <summary>
            32-bit integer type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Single">
            <summary>
            Float type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.String">
            <summary>
            String type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Texture">
            <summary>
            Any texture type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Texture1D">
            <summary>
            1D-texture type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Texture2D">
            <summary>
            2D-texture type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Texture3D">
            <summary>
            3D-texture type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.TextureCube">
            <summary>
            Cubic texture type.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting">
            <summary>
            Called before the device is reset. Allows graphics resources to 
            invalidate their state so they can be recreated after the device reset.
            Warning: This may be called after a call to Dispose() up until
            the resource is garbage collected.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)">
            <summary>
            The method that derived classes should override to implement disposing of managed and native resources.
            </summary>
            <param name="disposing">True if managed objects should be disposed.</param>
            <remarks>Native resources should always be released regardless of the value of the disposing parameter.</remarks>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.Blend">
            <summary>
            Defines a blend mode.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.One">
            <summary>
            Each component of the color is multiplied by {1, 1, 1, 1}.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.Zero">
            <summary>
            Each component of the color is multiplied by {0, 0, 0, 0}.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.SourceColor">
            <summary>
            Each component of the color is multiplied by the source color. 
            {Rs, Gs, Bs, As}, where Rs, Gs, Bs, As are color source values.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseSourceColor">
            <summary>
            Each component of the color is multiplied by the inverse of the source color.
             {1 − Rs, 1 − Gs, 1 − Bs, 1 − As}, where Rs, Gs, Bs, As are color source values.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.SourceAlpha">
            <summary>
            Each component of the color is multiplied by the alpha value of the source. 
            {As, As, As, As}, where As is the source alpha value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseSourceAlpha">
            <summary>
            Each component of the color is multiplied by the inverse of the alpha value of the source. 
            {1 − As, 1 − As, 1 − As, 1 − As}, where As is the source alpha value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.DestinationColor">
            <summary>
            Each component color is multiplied by the destination color. 
            {Rd, Gd, Bd, Ad}, where Rd, Gd, Bd, Ad are color destination values.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseDestinationColor">
            <summary>
            Each component of the color is multiplied by the inversed destination color. 
            {1 − Rd, 1 − Gd, 1 − Bd, 1 − Ad}, where Rd, Gd, Bd, Ad are color destination values.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.DestinationAlpha">
            <summary>
            Each component of the color is multiplied by the alpha value of the destination.
            {Ad, Ad, Ad, Ad}, where Ad is the destination alpha value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseDestinationAlpha">
            <summary>
            Each component of the color is multiplied by the inversed alpha value of the destination. 
            {1 − Ad, 1 − Ad, 1 − Ad, 1 − Ad}, where Ad is the destination alpha value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.BlendFactor">
            <summary>
            Each component of the color is multiplied by a constant in the <see cref="P:Microsoft.Xna.Framework.Graphics.GraphicsDevice.BlendFactor"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseBlendFactor">
            <summary>
            Each component of the color is multiplied by a inversed constant in the <see cref="P:Microsoft.Xna.Framework.Graphics.GraphicsDevice.BlendFactor"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.SourceAlphaSaturation">
            <summary>
            Each component of the color is multiplied by either the alpha of the source color, or the inverse of the alpha of the source color, whichever is greater. 
            {f, f, f, 1}, where f = min(As, 1 − As), where As is the source alpha value.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.BlendFunction">
            <summary>
            Defines a function for color blending.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.Add">
            <summary>
            The function will adds destination to the source. (srcColor * srcBlend) + (destColor * destBlend)
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.Subtract">
            <summary>
            The function will subtracts destination from source. (srcColor * srcBlend) − (destColor * destBlend)
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.ReverseSubtract">
            <summary>
            The function will subtracts source from destination. (destColor * destBlend) - (srcColor * srcBlend) 
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.Min">
            <summary>
            The function will extracts minimum of the source and destination. min((srcColor * srcBlend),(destColor * destBlend))
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.Max">
            <summary>
            The function will extracts maximum of the source and destination. max((srcColor * srcBlend),(destColor * destBlend))
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BlendState.Item(System.Int32)">
            <summary>
            Returns the target specific blend state.
            </summary>
            <param name="index">The 0 to 3 target blend state index.</param>
            <returns>A target blend state.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BlendState.BlendFactor">
            <summary>
            The color used as blend factor when alpha blending.
            </summary>
            <remarks>
            <see cref="P:Microsoft.Xna.Framework.Graphics.GraphicsDevice.BlendFactor"/> is set to this value when this <see cref="T:Microsoft.Xna.Framework.Graphics.BlendState"/>
            is bound to a GraphicsDevice.
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable">
            <summary>
            Enables use of the per-target blend states.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.CompareFunction">
            <summary>
            The comparison function used for depth, stencil, and alpha tests.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Always">
            <summary>
            Always passes the test.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Never">
            <summary>
            Never passes the test.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Less">
            <summary>
            Passes the test when the new pixel value is less than current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.LessEqual">
            <summary>
            Passes the test when the new pixel value is less than or equal to current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Equal">
            <summary>
            Passes the test when the new pixel value is equal to current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.GreaterEqual">
            <summary>
            Passes the test when the new pixel value is greater than or equal to current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Greater">
            <summary>
            Passes the test when the new pixel value is greater than current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.NotEqual">
            <summary>
            Passes the test when the new pixel value does not equal to current pixel value.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.CullMode">
            <summary>
            Defines a culling mode for faces in rasterization process.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CullMode.None">
            <summary>
            Do not cull faces.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CullMode.CullClockwiseFace">
            <summary>
            Cull faces with clockwise order.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CullMode.CullCounterClockwiseFace">
            <summary>
            Cull faces with counter clockwise order.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.FillMode">
            <summary>
            Defines options for filling the primitive.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.FillMode.Solid">
            <summary>
            Draw solid faces for each primitive.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.FillMode.WireFrame">
            <summary>
            Draw lines for each primitive.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SamplerState.ComparisonFunction">
            <summary>
            When using comparison sampling, also set <see cref="P:Microsoft.Xna.Framework.Graphics.SamplerState.FilterMode"/> to <see cref="F:Microsoft.Xna.Framework.Graphics.TextureFilterMode.Comparison"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.StencilOperation">
            <summary>
            Defines stencil buffer operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Keep">
            <summary>
            Does not update the stencil buffer entry.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Zero">
            <summary>
            Sets the stencil buffer entry to 0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Replace">
            <summary>
            Replaces the stencil buffer entry with a reference value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Increment">
            <summary>
            Increments the stencil buffer entry, wrapping to 0 if the new value exceeds the maximum value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Decrement">
            <summary>
            Decrements the stencil buffer entry, wrapping to the maximum value if the new value is less than 0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.IncrementSaturation">
            <summary>
            Increments the stencil buffer entry, clamping to the maximum value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.DecrementSaturation">
            <summary>
            Decrements the stencil buffer entry, clamping to 0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Invert">
            <summary>
            Inverts the bits in the stencil buffer entry.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.TextureAddressMode">
            <summary>
            Defines modes for addressing texels using texture coordinates that are outside of the range of 0.0 to 1.0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureAddressMode.Wrap">
            <summary>
            Texels outside range will form the tile at every integer junction.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureAddressMode.Clamp">
            <summary>
            Texels outside range will be set to color of 0.0 or 1.0 texel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureAddressMode.Mirror">
            <summary>
            Same as <see cref="F:Microsoft.Xna.Framework.Graphics.TextureAddressMode.Wrap"/> but tiles will also flipped at every integer junction.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureAddressMode.Border">
            <summary>
            Texels outside range will be set to the border color.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.TextureFilter">
            <summary>
            Defines filtering types for texture sampler.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.Linear">
            <summary>
            Use linear filtering.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.Point">
            <summary>
            Use point filtering.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.Anisotropic">
            <summary>
            Use anisotropic filtering.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.LinearMipPoint">
            <summary>
            Use linear filtering to shrink or expand, and point filtering between mipmap levels (mip).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.PointMipLinear">
            <summary>
            Use point filtering to shrink (minify) or expand (magnify), and linear filtering between mipmap levels.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.MinLinearMagPointMipLinear">
            <summary>
            Use linear filtering to shrink, point filtering to expand, and linear filtering between mipmap levels.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.MinLinearMagPointMipPoint">
            <summary>
            Use linear filtering to shrink, point filtering to expand, and point filtering between mipmap levels.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.MinPointMagLinearMipLinear">
            <summary>
            Use point filtering to shrink, linear filtering to expand, and linear filtering between mipmap levels.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.MinPointMagLinearMipPoint">
            <summary>
            Use point filtering to shrink, linear filtering to expand, and point filtering between mipmap levels.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.TextureFilterMode">
            <summary>
            Filtering modes for texture samplers.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.VertexElementUsage">
            <summary>
            Defines usage for vertex elements.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Position">
            <summary>
            Position data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Color">
            <summary>
            Color data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.TextureCoordinate">
            <summary>
            Texture coordinate data or can be used for user-defined data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Normal">
            <summary>
            Normal data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Binormal">
            <summary>
            Binormal data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Tangent">
            <summary>
            Tangent data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.BlendIndices">
            <summary>
            Blending indices data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.BlendWeight">
            <summary>
            Blending weight data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Depth">
            <summary>
            Depth data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Fog">
            <summary>
            Fog data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.PointSize">
            <summary>
            Point size data. Usable for drawing point sprites.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Sample">
            <summary>
            Sampler data for specifies the displacement value to look up.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.TessellateFactor">
            <summary>
            Single, positive float value, specifies a tessellation factor used in the tessellation unit to control the rate of tessellation.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.MathHelper">
            <summary>
            Contains commonly used precalculated values and mathematical operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.E">
            <summary>
            Represents the mathematical constant e(2.71828175).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Log10E">
            <summary>
            Represents the log base ten of e(0.4342945).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Log2E">
            <summary>
            Represents the log base two of e(1.442695).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Pi">
            <summary>
            Represents the value of pi(3.14159274).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.PiOver2">
            <summary>
            Represents the value of pi divided by two(1.57079637).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.PiOver4">
            <summary>
            Represents the value of pi divided by four(0.7853982).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.TwoPi">
            <summary>
            Represents the value of pi times two(6.28318548).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the coordinate of which is specified in value2.</param>
            <param name="amount2">The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the coordinate of which is specified in value3.</param>
            <returns>Cartesian coordinate of the specified point with respect to the axis being used.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A position that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Distance(System.Single,System.Single)">
            <summary>
            Calculates the absolute value of the difference of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>Distance between the two values.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Lerp(System.Single,System.Single,System.Single)">
            <summary>
            Linearly interpolates between two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns> 
            <remarks>This method performs the linear interpolation based on the following formula:
            <code>value1 + (value2 - value1) * amount</code>.
            Passing amount a value of 0 will cause value1 to be returned, a value of 1 will cause value2 to be returned.
            See <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> for a less efficient version with more precision around edge cases.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)">
            <summary>
            Linearly interpolates between two values.
            This method is a less efficient, more precise version of <see cref="M:Microsoft.Xna.Framework.MathHelper.Lerp(System.Single,System.Single,System.Single)"/>.
            See remarks for more info.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns>
            <remarks>This method performs the linear interpolation based on the following formula:
            <code>((1 - amount) * value1) + (value2 * amount)</code>.
            Passing amount a value of 0 will cause value1 to be returned, a value of 1 will cause value2 to be returned.
            This method does not have the floating point precision issue that <see cref="M:Microsoft.Xna.Framework.MathHelper.Lerp(System.Single,System.Single,System.Single)"/> has.
            i.e. If there is a big gap between value1 and value2 in magnitude (e.g. value1=10000000000000000, value2=1),
            right at the edge of the interpolation range (amount=1), <see cref="M:Microsoft.Xna.Framework.MathHelper.Lerp(System.Single,System.Single,System.Single)"/> will return 0 (whereas it should return 1).
            This also holds for value1=10^17, value2=10; value1=10^18,value2=10^2... so on.
            For an in depth explanation of the issue, see below references:
            Relevant Wikipedia Article: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support
            Relevant StackOverflow Answer: http://stackoverflow.com/questions/4353525/floating-point-linear-interpolation#answer-23716956
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Max(System.Single,System.Single)">
            <summary>
            Returns the greater of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Max(System.Int32,System.Int32)">
            <summary>
            Returns the greater of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Min(System.Single,System.Single)">
            <summary>
            Returns the lesser of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Min(System.Int32,System.Int32)">
            <summary>
            Returns the lesser of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <returns>Interpolated value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.ToDegrees(System.Single)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
            <remarks>
            This method uses double precission internally,
            though it returns single float
            Factor = 180 / pi
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.ToRadians(System.Single)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
            <remarks>
            This method uses double precission internally,
            though it returns single float
            Factor = pi / 180
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.WrapAngle(System.Single)">
            <summary>
            Reduces a given angle to a value between π and -π.
            </summary>
            <param name="angle">The angle to reduce, in radians.</param>
            <returns>The new angle, in radians.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.IsPowerOfTwo(System.Int32)">
            <summary>
            Determines if value is powered by two.
            </summary>
            <param name="value">A value.</param>
            <returns><c>true</c> if <c>value</c> is powered by two; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Matrix">
            <summary>
            Represents the right-handed 4x4 floating point matrix, which can store translation, scale and rotation information.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a matrix.
            </summary>
            <param name="m11">A first row and first column value.</param>
            <param name="m12">A first row and second column value.</param>
            <param name="m13">A first row and third column value.</param>
            <param name="m14">A first row and fourth column value.</param>
            <param name="m21">A second row and first column value.</param>
            <param name="m22">A second row and second column value.</param>
            <param name="m23">A second row and third column value.</param>
            <param name="m24">A second row and fourth column value.</param>
            <param name="m31">A third row and first column value.</param>
            <param name="m32">A third row and second column value.</param>
            <param name="m33">A third row and third column value.</param>
            <param name="m34">A third row and fourth column value.</param>
            <param name="m41">A fourth row and first column value.</param>
            <param name="m42">A fourth row and second column value.</param>
            <param name="m43">A fourth row and third column value.</param>
            <param name="m44">A fourth row and fourth column value.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.#ctor(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a matrix.
            </summary>
            <param name="row1">A first row of the created matrix.</param>
            <param name="row2">A second row of the created matrix.</param>
            <param name="row3">A third row of the created matrix.</param>
            <param name="row4">A fourth row of the created matrix.</param>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M11">
            <summary>
            A first row and first column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M12">
            <summary>
            A first row and second column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M13">
            <summary>
            A first row and third column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M14">
            <summary>
            A first row and fourth column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M21">
            <summary>
            A second row and first column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M22">
            <summary>
            A second row and second column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M23">
            <summary>
            A second row and third column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M24">
            <summary>
            A second row and fourth column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M31">
            <summary>
            A third row and first column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M32">
            <summary>
            A third row and second column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M33">
            <summary>
            A third row and third column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M34">
            <summary>
            A third row and fourth column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M41">
            <summary>
            A fourth row and first column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M42">
            <summary>
            A fourth row and second column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M43">
            <summary>
            A fourth row and third column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M44">
            <summary>
            A fourth row and fourth column value.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Backward">
            <summary>
            The backward vector formed from the third row M31, M32, M33 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Down">
            <summary>
            The down vector formed from the second row -M21, -M22, -M23 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Forward">
            <summary>
            The forward vector formed from the third row -M31, -M32, -M33 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Identity">
            <summary>
            Returns the identity matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Left">
            <summary>
            The left vector formed from the first row -M11, -M12, -M13 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Right">
            <summary>
            The right vector formed from the first row M11, M12, M13 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Translation">
            <summary>
            Position stored in this matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Up">
            <summary>
            The upper vector formed from the second row M21, M22, M23 elements.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <returns>The result of the matrix addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <param name="result">The result of the matrix addition as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Matrix"/> for spherical billboarding.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Matrix"/> for spherical billboarding as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Matrix"/> for cylindrical billboarding.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Matrix"/> for cylindrical billboarding as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> from a <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> of rotation moment.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> from a <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> of rotation moment.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new viewing <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <returns>The viewing <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new viewing <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <param name="result">The viewing <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for orthographic view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for orthographic view as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view.
            </summary>
            <param name="viewingVolume">The viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view with FOV.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance of the near plane.</param>
            <param name="farPlaneDistance">Distance of the far plane.</param>
            <param name="result">The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view with FOV as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view.
            </summary>
            <param name="viewingVolume">The viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around X axis.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around X axis as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Y axis.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Y axis as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Z axis.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Z axis as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <returns>The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <param name="result">The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <returns>The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <param name="result">The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="scales"><see cref="T:Microsoft.Xna.Framework.Vector3"/> representing x,y and z scale values.</param>
            <returns>The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="scales"><see cref="T:Microsoft.Xna.Framework.Vector3"/> representing x,y and z scale values.</param>
            <param name="result">The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Plane)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that flattens geometry into a specified <see cref="T:Microsoft.Xna.Framework.Plane"/> as if casting a shadow from a specified light source. 
            </summary>
            <param name="lightDirection">A vector specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Matrix"/> that can be used to flatten geometry onto the specified plane from the specified direction. </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that flattens geometry into a specified <see cref="T:Microsoft.Xna.Framework.Plane"/> as if casting a shadow from a specified light source. 
            </summary>
            <param name="lightDirection">A vector specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <param name="result">A <see cref="T:Microsoft.Xna.Framework.Matrix"/> that can be used to flatten geometry onto the specified plane from the specified direction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <returns>The translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <param name="result">The translation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <returns>The translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <param name="result">The translation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane)">
            <summary>
            Creates a new reflection <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">The plane that used for reflection calculation.</param>
            <returns>The reflection <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new reflection <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">The plane that used for reflection calculation.</param>
            <param name="result">The reflection <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new world <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:Microsoft.Xna.Framework.Vector3.Up"/>.</param>
            <returns>The world <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new world <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:Microsoft.Xna.Framework.Vector3.Up"/>.</param>
            <param name="result">The world <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Decompose(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Decomposes this matrix to translation, rotation and scale elements. Returns <c>true</c> if matrix can be decomposed; <c>false</c> otherwise.
            </summary>
            <param name="scale">Scale vector as an output parameter.</param>
            <param name="rotation">Rotation quaternion as an output parameter.</param>
            <param name="translation">Translation vector as an output parameter.</param>
            <returns><c>true</c> if matrix can be decomposed; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Determinant">
            <summary>
            Returns a determinant of this <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <returns>Determinant of this <see cref="T:Microsoft.Xna.Framework.Matrix"/></returns>
            <remarks>See more about determinant here - http://en.wikipedia.org/wiki/Determinant.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">Divisor <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>The result of dividing the matrix.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">Divisor <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">The result of dividing the matrix as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a matrix by a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Equals(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> without any tolerance.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Matrix"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/> without any tolerance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains inversion of the specified matrix. 
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>The inverted matrix.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains inversion of the specified matrix. 
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">The inverted matrix as output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>>The result of linear interpolation of the specified matrixes.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified matrixes as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Result of the matrix multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Result of the matrix multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Matrix"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Matrix"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">Result of the matrix multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.ToFloatArray(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Copy the values of specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> to the float array.
            </summary>
            <param name="matrix">The source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>The array which matrix values will be stored.</returns>
            <remarks>
            Required for OpenGL 2.0 projection matrix stuff.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Result of the matrix negation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Result of the matrix negation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Addition(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Adds two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the add sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the add sign.</param>
            <returns>Sum of the matrixes.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by the elements of another <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the div sign.</param>
            <param name="matrix2">Divisor <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the div sign.</param>
            <returns>The result of dividing the matrixes.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Equality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Matrix"/> instances are equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the equal sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Inequality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Matrix"/> instances are not equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the not equal sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Multiplies two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the mul sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication.</returns>
            <remarks>
            Using matrix multiplication algorithm - see http://en.wikipedia.org/wiki/Matrix_multiplication.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Multiplies the elements of matrix by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Subtraction(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Subtracts the values of one <see cref="T:Microsoft.Xna.Framework.Matrix"/> from another <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the sub sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the sub sign.</param>
            <returns>Result of the matrix subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_UnaryNegation(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Inverts values in the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>The result of the matrix subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">The result of the matrix subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Matrix"/> in the format:
            {M11:[<see cref="F:Microsoft.Xna.Framework.Matrix.M11"/>] M12:[<see cref="F:Microsoft.Xna.Framework.Matrix.M12"/>] M13:[<see cref="F:Microsoft.Xna.Framework.Matrix.M13"/>] M14:[<see cref="F:Microsoft.Xna.Framework.Matrix.M14"/>]}
            {M21:[<see cref="F:Microsoft.Xna.Framework.Matrix.M21"/>] M12:[<see cref="F:Microsoft.Xna.Framework.Matrix.M22"/>] M13:[<see cref="F:Microsoft.Xna.Framework.Matrix.M23"/>] M14:[<see cref="F:Microsoft.Xna.Framework.Matrix.M24"/>]}
            {M31:[<see cref="F:Microsoft.Xna.Framework.Matrix.M31"/>] M32:[<see cref="F:Microsoft.Xna.Framework.Matrix.M32"/>] M33:[<see cref="F:Microsoft.Xna.Framework.Matrix.M33"/>] M34:[<see cref="F:Microsoft.Xna.Framework.Matrix.M34"/>]}
            {M41:[<see cref="F:Microsoft.Xna.Framework.Matrix.M41"/>] M42:[<see cref="F:Microsoft.Xna.Framework.Matrix.M42"/>] M43:[<see cref="F:Microsoft.Xna.Framework.Matrix.M43"/>] M44:[<see cref="F:Microsoft.Xna.Framework.Matrix.M44"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains the transposing result.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <param name="result">The new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains the transposing result as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.FindDeterminants(Microsoft.Xna.Framework.Matrix@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Helper method for using the Laplace expansion theorem using two rows expansions to calculate major and 
            minor determinants of a 4x4 matrix. This method is used for inverting a matrix.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.PlaneHelper.ClassifyPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@)">
            <summary>
            Returns a value indicating what side (positive/negative) of a plane a point is
            </summary>
            <param name="point">The point to check with</param>
            <param name="plane">The plane to check against</param>
            <returns>Greater than zero if on the positive side, less than zero if on the negative size, 0 otherwise</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.PlaneHelper.PerpendicularDistance(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@)">
            <summary>
            Returns the perpendicular distance from a point to a plane
            </summary>
            <param name="point">The point to check</param>
            <param name="plane">The place to check</param>
            <returns>The perpendicular distance from the point to the plane</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transforms a normalized plane by a matrix.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Plane@)">
            <summary>
            Transforms a normalized plane by a matrix.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <param name="result">The transformed plane.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transforms a normalized plane by a quaternion rotation.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="rotation">The quaternion rotation.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Plane@)">
            <summary>
            Transforms a normalized plane by a quaternion rotation.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="rotation">The quaternion rotation.</param>
            <param name="result">The transformed plane.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Point">
            <summary>
            Describes a 2D-point.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Point.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Point.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Point.Zero">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Point"/> with coordinates 0, 0.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a point with X and Y from two values.
            </summary>
            <param name="x">The x coordinate in 2d-space.</param>
            <param name="y">The y coordinate in 2d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.#ctor(System.Int32)">
            <summary>
            Constructs a point with X and Y set to the same value.
            </summary>
            <param name="value">The x and y coordinates in 2d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Addition(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Adds two points.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the right of the add sign.</param>
            <returns>Sum of the points.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Subtraction(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Subtracts a <see cref="T:Microsoft.Xna.Framework.Point"/> from a <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the right of the sub sign.</param>
            <returns>Result of the subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Multiply(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Multiplies the components of two points by each other.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the right of the mul sign.</param>
            <returns>Result of the multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Division(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Point"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
            <param name="source">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the left of the div sign.</param>
            <param name="divisor">Divisor <see cref="T:Microsoft.Xna.Framework.Point"/> on the right of the div sign.</param>
            <returns>The result of dividing the points.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Equality(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Point"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Point"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Point"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Inequality(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Point"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Point"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Point"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.Equals(Microsoft.Xna.Framework.Point)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Point"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Point"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Point"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Point.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Point.Y"/>]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Point"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.ToVector2">
            <summary>
            Gets a <see cref="T:Microsoft.Xna.Framework.Vector2"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Vector2"/> representation for this object.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.PlaneIntersectionType">
            <summary>
            Defines the intersection between a <see cref="T:Microsoft.Xna.Framework.Plane"/> and a bounding volume.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlaneIntersectionType.Front">
            <summary>
            There is no intersection, the bounding volume is in the negative half space of the plane.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlaneIntersectionType.Back">
            <summary>
            There is no intersection, the bounding volume is in the positive half space of the plane.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlaneIntersectionType.Intersecting">
            <summary>
            The plane is intersected.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Quaternion">
            <summary>
            An efficient mathematical representation for three dimensional rotations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Quaternion.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Quaternion.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Quaternion.Z">
            <summary>
            The z coordinate of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Quaternion.W">
            <summary>
            The rotation component of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a quaternion with X, Y, Z and W from four values.
            </summary>
            <param name="x">The x coordinate in 3d-space.</param>
            <param name="y">The y coordinate in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
            <param name="w">The rotation component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.#ctor(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Constructs a quaternion with X, Y, Z from <see cref="T:Microsoft.Xna.Framework.Vector3"/> and rotation component from a scalar.
            </summary>
            <param name="value">The x, y, z coordinates in 3d-space.</param>
            <param name="w">The rotation component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a quaternion from <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="value">The x, y, z coordinates in 3d-space and the rotation component.</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Quaternion.Identity">
            <summary>
            Returns a quaternion representing no rotation.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Add(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains the sum of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of the quaternion addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Add(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains the sum of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of the quaternion addition as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Concatenate(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains concatenation between two quaternion.
            </summary>
            <param name="value1">The first <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to concatenate.</param>
            <param name="value2">The second <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to concatenate.</param>
            <returns>The result of rotation of <paramref name="value1"/> followed by <paramref name="value2"/> rotation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Concatenate(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains concatenation between two quaternion.
            </summary>
            <param name="value1">The first <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to concatenate.</param>
            <param name="value2">The second <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to concatenate.</param>
            <param name="result">The result of rotation of <paramref name="value1"/> followed by <paramref name="value2"/> rotation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Conjugate">
            <summary>
            Transforms this quaternion into its conjugated version.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Conjugate(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains conjugated version of the specified quaternion.
            </summary>
            <param name="value">The quaternion which values will be used to create the conjugated version.</param>
            <returns>The conjugate version of the specified quaternion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Conjugate(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains conjugated version of the specified quaternion.
            </summary>
            <param name="value">The quaternion which values will be used to create the conjugated version.</param>
            <param name="result">The conjugated version of the specified quaternion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified axis and angle.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle in radians.</param>
            <returns>The new quaternion builded from axis and angle.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified axis and angle.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle in radians.</param>
            <param name="result">The new quaternion builded from axis and angle as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromRotationMatrix(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>A quaternion composed from the rotation part of the matrix.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromRotationMatrix(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <param name="result">A quaternion composed from the rotation part of the matrix as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified yaw, pitch and roll angles.
            </summary>
            <param name="yaw">Yaw around the y axis in radians.</param>
            <param name="pitch">Pitch around the x axis in radians.</param>
            <param name="roll">Roll around the z axis in radians.</param>
            <returns>A new quaternion from the concatenated yaw, pitch, and roll angles.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified yaw, pitch and roll angles.
            </summary>
            <param name="yaw">Yaw around the y axis in radians.</param>
            <param name="pitch">Pitch around the x axis in radians.</param>
            <param name="roll">Roll around the z axis in radians.</param>
            <param name="result">A new quaternion from the concatenated yaw, pitch, and roll angles as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Divide(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Divides a <see cref="T:Microsoft.Xna.Framework.Quaternion"/> by the other <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Divisor <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of dividing the quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Divide(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Divides a <see cref="T:Microsoft.Xna.Framework.Quaternion"/> by the other <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Divisor <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of dividing the quaternions as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Dot(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Returns a dot product of two quaternions.
            </summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <returns>The dot product of two quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Dot(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,System.Single@)">
            <summary>
            Returns a dot product of two quaternions.
            </summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <param name="result">The dot product of two quaternions as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Equals(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Inverse(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Returns the inverse quaternion which represents the opposite rotation.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The inverse quaternion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Inverse(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Returns the inverse quaternion which represents the opposite rotation.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The inverse quaternion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Length">
            <summary>
            Returns the magnitude of the quaternion components.
            </summary>
            <returns>The magnitude of the quaternion components.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.LengthSquared">
            <summary>
            Returns the squared magnitude of the quaternion components.
            </summary>
            <returns>The squared magnitude of the quaternion components.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Lerp(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Performs a linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <returns>The result of linear blending between two quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Lerp(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Performs a linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <param name="result">The result of linear blending between two quaternions as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Slerp(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Performs a spherical linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <returns>The result of spherical linear blending between two quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Slerp(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Performs a spherical linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <param name="result">The result of spherical linear blending between two quaternions as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Subtract(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains subtraction of one <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from another.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of the quaternion subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Subtract(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains subtraction of one <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from another.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of the quaternion subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Multiply(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains a multiplication of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of the quaternion multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Multiply(Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the quaternion multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Multiply(Microsoft.Xna.Framework.Quaternion@,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the quaternion multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Multiply(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains a multiplication of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of the quaternion multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Negate(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of the quaternion negation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Negate(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of the quaternion negation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Normalize">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Normalize(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The unit length quaternion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Normalize(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The unit length quaternion an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Quaternion.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Quaternion.Y"/>] Z:[<see cref="F:Microsoft.Xna.Framework.Quaternion.Z"/>] W:[<see cref="F:Microsoft.Xna.Framework.Quaternion.W"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.ToVector4">
            <summary>
            Gets a <see cref="T:Microsoft.Xna.Framework.Vector4"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Vector4"/> representation for this object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Addition(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the left of the add sign.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Division(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Divides a <see cref="T:Microsoft.Xna.Framework.Quaternion"/> by the other <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the left of the div sign.</param>
            <param name="quaternion2">Divisor <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the right of the div sign.</param>
            <returns>The result of dividing the quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Equality(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Quaternion"/> instances are equal.
            </summary>
            <param name="quaternion1"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> instance on the left of the equal sign.</param>
            <param name="quaternion2"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Inequality(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Quaternion"/> instances are not equal.
            </summary>
            <param name="quaternion1"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> instance on the left of the not equal sign.</param>
            <param name="quaternion2"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Multiply(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Multiplies two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the left of the mul sign.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the right of the mul sign.</param>
            <returns>Result of the quaternions multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Multiply(Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Multiplies the components of quaternion by a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the quaternion multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Subtraction(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Subtracts a <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from a <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the sub sign.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the quaternion subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_UnaryNegation(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the right of the sub sign.</param>
            <returns>The result of the quaternion negation.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Rectangle">
            <summary>
            Describes a 2D-rectangle. 
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Rectangle.X">
            <summary>
            The x coordinate of the top-left corner of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Rectangle.Y">
            <summary>
            The y coordinate of the top-left corner of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Rectangle.Width">
            <summary>
            The width of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Rectangle.Height">
            <summary>
            The height of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Empty">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Rectangle"/> with X=0, Y=0, Width=0, Height=0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Left">
            <summary>
            Returns the x coordinate of the left edge of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Right">
            <summary>
            Returns the x coordinate of the right edge of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Top">
            <summary>
            Returns the y coordinate of the top edge of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Bottom">
            <summary>
            Returns the y coordinate of the bottom edge of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.IsEmpty">
            <summary>
            Whether or not this <see cref="T:Microsoft.Xna.Framework.Rectangle"/> has a <see cref="F:Microsoft.Xna.Framework.Rectangle.Width"/> and
            <see cref="F:Microsoft.Xna.Framework.Rectangle.Height"/> of 0, and a <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/> of (0, 0).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Location">
            <summary>
            The top-left coordinates of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Size">
            <summary>
            The width-height coordinates of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Center">
            <summary>
            A <see cref="T:Microsoft.Xna.Framework.Point"/> located in the center of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <remarks>
            If <see cref="F:Microsoft.Xna.Framework.Rectangle.Width"/> or <see cref="F:Microsoft.Xna.Framework.Rectangle.Height"/> is an odd number,
            the center point will be rounded down.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Rectangle"/> struct, with the specified
            position, width, and height.
            </summary>
            <param name="x">The x coordinate of the top-left corner of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="y">The y coordinate of the top-left corner of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="width">The width of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="height">The height of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.#ctor(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Rectangle"/> struct, with the specified
            location and size.
            </summary>
            <param name="location">The x and y coordinates of the top-left corner of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="size">The width and height of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.op_Equality(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Rectangle"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Rectangle"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Rectangle"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.op_Inequality(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Rectangle"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Rectangle"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Rectangle"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(System.Int32,System.Int32)">
            <summary>
            Gets whether or not the provided coordinates lie within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="x">The x coordinate of the point to check for containment.</param>
            <param name="y">The y coordinate of the point to check for containment.</param>
            <returns><c>true</c> if the provided coordinates lie inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(System.Single,System.Single)">
            <summary>
            Gets whether or not the provided coordinates lie within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="x">The x coordinate of the point to check for containment.</param>
            <param name="y">The y coordinate of the point to check for containment.</param>
            <returns><c>true</c> if the provided coordinates lie inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(Microsoft.Xna.Framework.Point)">
            <summary>
            Gets whether or not the provided <see cref="T:Microsoft.Xna.Framework.Point"/> lies within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:Microsoft.Xna.Framework.Point"/> lies inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(Microsoft.Xna.Framework.Point@,System.Boolean@)">
            <summary>
            Gets whether or not the provided <see cref="T:Microsoft.Xna.Framework.Point"/> lies within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="result"><c>true</c> if the provided <see cref="T:Microsoft.Xna.Framework.Point"/> lies inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets whether or not the provided <see cref="T:Microsoft.Xna.Framework.Vector2"/> lies within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:Microsoft.Xna.Framework.Vector2"/> lies inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(Microsoft.Xna.Framework.Vector2@,System.Boolean@)">
            <summary>
            Gets whether or not the provided <see cref="T:Microsoft.Xna.Framework.Vector2"/> lies within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="result"><c>true</c> if the provided <see cref="T:Microsoft.Xna.Framework.Vector2"/> lies inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Gets whether or not the provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/> lies within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="value">The <see cref="T:Microsoft.Xna.Framework.Rectangle"/> to check for inclusion in this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s bounds lie entirely inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(Microsoft.Xna.Framework.Rectangle@,System.Boolean@)">
            <summary>
            Gets whether or not the provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/> lies within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="value">The <see cref="T:Microsoft.Xna.Framework.Rectangle"/> to check for inclusion in this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="result"><c>true</c> if the provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s bounds lie entirely inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Equals(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Rectangle"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Inflate(System.Int32,System.Int32)">
            <summary>
            Adjusts the edges of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/> by specified horizontal and vertical amounts. 
            </summary>
            <param name="horizontalAmount">Value to adjust the left and right edges.</param>
            <param name="verticalAmount">Value to adjust the top and bottom edges.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Inflate(System.Single,System.Single)">
            <summary>
            Adjusts the edges of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/> by specified horizontal and vertical amounts. 
            </summary>
            <param name="horizontalAmount">Value to adjust the left and right edges.</param>
            <param name="verticalAmount">Value to adjust the top and bottom edges.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Intersects(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Gets whether or not the other <see cref="T:Microsoft.Xna.Framework.Rectangle"/> intersects with this rectangle.
            </summary>
            <param name="value">The other rectangle for testing.</param>
            <returns><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.Rectangle"/> intersects with this rectangle; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Intersects(Microsoft.Xna.Framework.Rectangle@,System.Boolean@)">
            <summary>
            Gets whether or not the other <see cref="T:Microsoft.Xna.Framework.Rectangle"/> intersects with this rectangle.
            </summary>
            <param name="value">The other rectangle for testing.</param>
            <param name="result"><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.Rectangle"/> intersects with this rectangle; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Intersect(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Rectangle"/> that contains overlapping region of two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <returns>Overlapping region of the two rectangles.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Intersect(Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Rectangle"/> that contains overlapping region of two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="result">Overlapping region of the two rectangles as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Offset(System.Int32,System.Int32)">
            <summary>
            Changes the <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/> of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="offsetX">The x coordinate to add to this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="offsetY">The y coordinate to add to this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Offset(System.Single,System.Single)">
            <summary>
            Changes the <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/> of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="offsetX">The x coordinate to add to this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="offsetY">The y coordinate to add to this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Offset(Microsoft.Xna.Framework.Point)">
            <summary>
            Changes the <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/> of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="amount">The x and y components to add to this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Offset(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Changes the <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/> of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="amount">The x and y components to add to this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Rectangle.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Rectangle.Y"/>] Width:[<see cref="F:Microsoft.Xna.Framework.Rectangle.Width"/>] Height:[<see cref="F:Microsoft.Xna.Framework.Rectangle.Height"/>]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Union(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Rectangle"/> that completely contains two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <returns>The union of the two rectangles.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Union(Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Rectangle"/> that completely contains two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="result">The union of the two rectangles as an output parameter.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Vector2">
            <summary>
            Describes a 2D-vector.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector2.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector2.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.Zero">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector2"/> with components 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.One">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector2"/> with components 1, 1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.UnitX">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector2"/> with components 1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.UnitY">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector2"/> with components 0, 1.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a 2d vector with X and Y from two values.
            </summary>
            <param name="x">The x coordinate in 2d-space.</param>
            <param name="y">The y coordinate in 2d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.#ctor(System.Single)">
            <summary>
            Constructs a 2d vector with X and Y set to the same value.
            </summary>
            <param name="value">The x and y coordinates in 2d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_UnaryNegation(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Inverts values in the specified <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Subtraction(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Subtracts a <see cref="T:Microsoft.Xna.Framework.Vector2"/> from a <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Multiply(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Multiply(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Multiply(System.Single,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Division(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Division(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Equality(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector2"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector2"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector2"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Inequality(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector2"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector2"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector2"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Add(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Add(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Barycentric(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Barycentric(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.CatmullRom(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.CatmullRom(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Clamp(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Clamp(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Distance(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Distance(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.DistanceSquared(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.DistanceSquared(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Divide(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Divide(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Divide(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Divide(Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Dot(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Dot(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Equals(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Vector2"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Hermite(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Hermite(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Length">
            <summary>
            Returns the length of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <returns>The length of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <returns>The squared length of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Lerp(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Lerp(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.LerpPrecise(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Microsoft.Xna.Framework.Vector2.Lerp(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.LerpPrecise(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Microsoft.Xna.Framework.Vector2.Lerp(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Max(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector2"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Max(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector2"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Min(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector2"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Min(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector2"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Multiply(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Multiply(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Multiply(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Multiply(Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Negate(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Negate(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Normalize">
            <summary>
            Turns this <see cref="T:Microsoft.Xna.Framework.Vector2"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Normalize(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Normalize(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Reflect(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Reflect(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.SmoothStep(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.SmoothStep(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Subtract(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Subtract(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector2"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Vector2.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Vector2.Y"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.ToPoint">
            <summary>
            Gets a <see cref="T:Microsoft.Xna.Framework.Point"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Point"/> representation for this object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector2"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Vector3">
            <summary>
            Describes a 3D-vector.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector3.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector3.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector3.Z">
            <summary>
            The z coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Zero">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.One">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 1, 1, 1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.UnitX">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.UnitY">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.UnitZ">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Up">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Down">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, -1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Right">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Left">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components -1, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Forward">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 0, -1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Backward">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y and Z from three values.
            </summary>
            <param name="x">The x coordinate in 3d-space.</param>
            <param name="y">The y coordinate in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.#ctor(System.Single)">
            <summary>
            Constructs a 3d vector with X, Y and Z set to the same value.
            </summary>
            <param name="value">The x, y and z coordinates in 3d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.#ctor(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y from <see cref="T:Microsoft.Xna.Framework.Vector2"/> and Z from a scalar.
            </summary>
            <param name="value">The x and y coordinates in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Add(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Add(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Barycentric(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Barycentric(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.CatmullRom(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.CatmullRom(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Clamp(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Clamp(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Cross(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The cross product of two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Cross(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="result">The cross product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Distance(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Distance(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.DistanceSquared(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.DistanceSquared(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Divide(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Divide(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Divide(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Divide(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Dot(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Dot(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Equals(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Vector3"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Hermite(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Hermite(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Length">
            <summary>
            Returns the length of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <returns>The length of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <returns>The squared length of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Lerp(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Lerp(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.LerpPrecise(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Microsoft.Xna.Framework.Vector3.Lerp(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.LerpPrecise(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Microsoft.Xna.Framework.Vector3.Lerp(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Max(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector3"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Max(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector3"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Min(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector3"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Min(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector3"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Multiply(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Multiply(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Multiply(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Multiply(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Negate(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Negate(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Normalize">
            <summary>
            Turns this <see cref="T:Microsoft.Xna.Framework.Vector3"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Normalize(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Normalize(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Reflect(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Reflect(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.SmoothStep(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.SmoothStep(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Subtract(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Subtract(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector3"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Vector3.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Vector3.Y"/>] Z:[<see cref="F:Microsoft.Xna.Framework.Vector3.Z"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector3"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector3"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector3"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Equality(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector3"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector3"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector3"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Inequality(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector3"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector3"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector3"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Addition(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_UnaryNegation(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Inverts values in the specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Subtraction(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Subtracts a <see cref="T:Microsoft.Xna.Framework.Vector3"/> from a <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Multiply(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Multiply(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Multiply(System.Single,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Division(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Division(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Vector4">
            <summary>
            Describes a 4D-vector.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector4.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector4.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector4.Z">
            <summary>
            The z coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector4.W">
            <summary>
            The w coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.Zero">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 0, 0, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.One">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 1, 1, 1, 1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitX">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 1, 0, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitY">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 0, 1, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitZ">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 0, 0, 1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitW">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 0, 0, 0, 1.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y, Z and W from four values.
            </summary>
            <param name="x">The x coordinate in 4d-space.</param>
            <param name="y">The y coordinate in 4d-space.</param>
            <param name="z">The z coordinate in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X and Z from <see cref="T:Microsoft.Xna.Framework.Vector2"/> and Z and W from the scalars.
            </summary>
            <param name="value">The x and y coordinates in 4d-space.</param>
            <param name="z">The z coordinate in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y, Z from <see cref="T:Microsoft.Xna.Framework.Vector3"/> and W from a scalar.
            </summary>
            <param name="value">The x, y and z coordinates in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.#ctor(System.Single)">
            <summary>
            Constructs a 4d vector with X, Y, Z and W set to the same value.
            </summary>
            <param name="value">The x, y, z and w coordinates in 4d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.
            </summary>
            <param name="value1">The first vector of 4d-triangle.</param>
            <param name="value2">The second vector of 4d-triangle.</param>
            <param name="value3">The third vector of 4d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 4d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 4d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.
            </summary>
            <param name="value1">The first vector of 4d-triangle.</param>
            <param name="value2">The second vector of 4d-triangle.</param>
            <param name="value3">The third vector of 4d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 4d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 4d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Equals(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Vector4"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Length">
            <summary>
            Returns the length of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <returns>The length of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <returns>The squared length of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.LerpPrecise(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.LerpPrecise(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector4"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector4"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector4"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector4"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector4"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector4"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Normalize">
            <summary>
            Turns this <see cref="T:Microsoft.Xna.Framework.Vector4"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector4"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector4"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector4"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector4"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector4"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Vector4.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Vector4.Y"/>] Z:[<see cref="F:Microsoft.Xna.Framework.Vector4.Z"/>] W:[<see cref="F:Microsoft.Xna.Framework.Vector4.W"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_UnaryNegation(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Inverts values in the specified <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_Equality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector4"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector4"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector4"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_Inequality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector4"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector4"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector4"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_Addition(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_Subtraction(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Subtracts a <see cref="T:Microsoft.Xna.Framework.Vector4"/> from a <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_Multiply(Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_Multiply(System.Single,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_Division(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.op_Division(Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ExternalTool">
            <summary>
            Helper to run an external tool installed in the system. Useful for when
            we don't want to package the tool ourselves (ffmpeg) or it's provided
            by a third party (console manufacturer).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ExternalTool.FindCommand(System.String)">
            <summary>
            Returns the fully-qualified path for a command, searching the system path if necessary.
            </summary>
            <remarks>
            It's apparently necessary to use the full path when running on some systems.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ExternalTool.DeleteFile(System.String)">
            <summary>
            Safely deletes the file if it exists.
            </summary>
            <param name="filePath">The path to the file to delete.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.Pipeline.LoadedTypeCollection`1">
            <summary>
            A helper for collecting instances of a particular type
            by scanning the types in loaded assemblies.
            </summary>
        </member>
        <member name="M:MonoGame.Utilities.Hash.ComputeHash(System.Byte[])">
            <summary>
            Compute a hash from a byte array.
            </summary>
            <remarks>
            Modified FNV Hash in C#
            http://stackoverflow.com/a/468084
            </remarks>
        </member>
        <member name="M:MonoGame.Utilities.Hash.ComputeHash(System.IO.Stream)">
            <summary>
            Compute a hash from the content of a stream and restore the position.
            </summary>
            <remarks>
            Modified FNV Hash in C#
            http://stackoverflow.com/a/468084
            </remarks>
        </member>
    </members>
</doc>
